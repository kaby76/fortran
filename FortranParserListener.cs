//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from FortranParser.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="FortranParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IFortranParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterName([NotNull] FortranParser.NameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitName([NotNull] FortranParser.NameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] FortranParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] FortranParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.program_unit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram_unit([NotNull] FortranParser.Program_unitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.program_unit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram_unit([NotNull] FortranParser.Program_unitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.main_program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMain_program([NotNull] FortranParser.Main_programContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.main_program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMain_program([NotNull] FortranParser.Main_programContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.external_subprogram"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExternal_subprogram([NotNull] FortranParser.External_subprogramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.external_subprogram"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExternal_subprogram([NotNull] FortranParser.External_subprogramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.function_subprogram"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_subprogram([NotNull] FortranParser.Function_subprogramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.function_subprogram"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_subprogram([NotNull] FortranParser.Function_subprogramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.subroutine_subprogram"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubroutine_subprogram([NotNull] FortranParser.Subroutine_subprogramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.subroutine_subprogram"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubroutine_subprogram([NotNull] FortranParser.Subroutine_subprogramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.module"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModule([NotNull] FortranParser.ModuleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.module"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModule([NotNull] FortranParser.ModuleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.submodule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubmodule([NotNull] FortranParser.SubmoduleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.submodule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubmodule([NotNull] FortranParser.SubmoduleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.block_data"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock_data([NotNull] FortranParser.Block_dataContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.block_data"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock_data([NotNull] FortranParser.Block_dataContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.specification_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSpecification_part([NotNull] FortranParser.Specification_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.specification_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSpecification_part([NotNull] FortranParser.Specification_partContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.implicit_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImplicit_part([NotNull] FortranParser.Implicit_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.implicit_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImplicit_part([NotNull] FortranParser.Implicit_partContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.implicit_part_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImplicit_part_stmt([NotNull] FortranParser.Implicit_part_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.implicit_part_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImplicit_part_stmt([NotNull] FortranParser.Implicit_part_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.declaration_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclaration_construct([NotNull] FortranParser.Declaration_constructContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.declaration_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclaration_construct([NotNull] FortranParser.Declaration_constructContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.specification_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSpecification_construct([NotNull] FortranParser.Specification_constructContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.specification_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSpecification_construct([NotNull] FortranParser.Specification_constructContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.execution_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExecution_part([NotNull] FortranParser.Execution_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.execution_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExecution_part([NotNull] FortranParser.Execution_partContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.execution_part_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExecution_part_construct([NotNull] FortranParser.Execution_part_constructContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.execution_part_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExecution_part_construct([NotNull] FortranParser.Execution_part_constructContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.internal_subprogram_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInternal_subprogram_part([NotNull] FortranParser.Internal_subprogram_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.internal_subprogram_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInternal_subprogram_part([NotNull] FortranParser.Internal_subprogram_partContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.internal_subprogram"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInternal_subprogram([NotNull] FortranParser.Internal_subprogramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.internal_subprogram"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInternal_subprogram([NotNull] FortranParser.Internal_subprogramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.module_subprogram_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModule_subprogram_part([NotNull] FortranParser.Module_subprogram_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.module_subprogram_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModule_subprogram_part([NotNull] FortranParser.Module_subprogram_partContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.module_subprogram"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModule_subprogram([NotNull] FortranParser.Module_subprogramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.module_subprogram"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModule_subprogram([NotNull] FortranParser.Module_subprogramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.separate_module_subprogram"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSeparate_module_subprogram([NotNull] FortranParser.Separate_module_subprogramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.separate_module_subprogram"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSeparate_module_subprogram([NotNull] FortranParser.Separate_module_subprogramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.other_specification_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOther_specification_stmt([NotNull] FortranParser.Other_specification_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.other_specification_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOther_specification_stmt([NotNull] FortranParser.Other_specification_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.executable_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExecutable_construct([NotNull] FortranParser.Executable_constructContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.executable_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExecutable_construct([NotNull] FortranParser.Executable_constructContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.action_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAction_stmt([NotNull] FortranParser.Action_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.action_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAction_stmt([NotNull] FortranParser.Action_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.keyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterKeyword([NotNull] FortranParser.KeywordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.keyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitKeyword([NotNull] FortranParser.KeywordContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.underscore"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnderscore([NotNull] FortranParser.UnderscoreContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.underscore"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnderscore([NotNull] FortranParser.UnderscoreContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstant([NotNull] FortranParser.ConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstant([NotNull] FortranParser.ConstantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.literal_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral_constant([NotNull] FortranParser.Literal_constantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.literal_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral_constant([NotNull] FortranParser.Literal_constantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.named_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamed_constant([NotNull] FortranParser.Named_constantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.named_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamed_constant([NotNull] FortranParser.Named_constantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.int_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInt_constant([NotNull] FortranParser.Int_constantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.int_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInt_constant([NotNull] FortranParser.Int_constantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.intrinsic_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntrinsic_operator([NotNull] FortranParser.Intrinsic_operatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.intrinsic_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntrinsic_operator([NotNull] FortranParser.Intrinsic_operatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.power_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPower_op([NotNull] FortranParser.Power_opContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.power_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPower_op([NotNull] FortranParser.Power_opContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.mult_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMult_op([NotNull] FortranParser.Mult_opContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.mult_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMult_op([NotNull] FortranParser.Mult_opContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.add_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdd_op([NotNull] FortranParser.Add_opContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.add_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdd_op([NotNull] FortranParser.Add_opContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.concat_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConcat_op([NotNull] FortranParser.Concat_opContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.concat_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConcat_op([NotNull] FortranParser.Concat_opContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.rel_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRel_op([NotNull] FortranParser.Rel_opContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.rel_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRel_op([NotNull] FortranParser.Rel_opContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.not_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNot_op([NotNull] FortranParser.Not_opContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.not_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNot_op([NotNull] FortranParser.Not_opContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.and_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnd_op([NotNull] FortranParser.And_opContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.and_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnd_op([NotNull] FortranParser.And_opContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.or_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOr_op([NotNull] FortranParser.Or_opContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.or_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOr_op([NotNull] FortranParser.Or_opContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.equiv_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEquiv_op([NotNull] FortranParser.Equiv_opContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.equiv_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEquiv_op([NotNull] FortranParser.Equiv_opContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.defined_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefined_operator([NotNull] FortranParser.Defined_operatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.defined_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefined_operator([NotNull] FortranParser.Defined_operatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.defined_unary_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefined_unary_op([NotNull] FortranParser.Defined_unary_opContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.defined_unary_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefined_unary_op([NotNull] FortranParser.Defined_unary_opContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.defined_binary_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefined_binary_op([NotNull] FortranParser.Defined_binary_opContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.defined_binary_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefined_binary_op([NotNull] FortranParser.Defined_binary_opContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.extended_intrinsic_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExtended_intrinsic_op([NotNull] FortranParser.Extended_intrinsic_opContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.extended_intrinsic_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExtended_intrinsic_op([NotNull] FortranParser.Extended_intrinsic_opContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.label"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLabel([NotNull] FortranParser.LabelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.label"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLabel([NotNull] FortranParser.LabelContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.type_param_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_param_value([NotNull] FortranParser.Type_param_valueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.type_param_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_param_value([NotNull] FortranParser.Type_param_valueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.type_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_spec([NotNull] FortranParser.Type_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.type_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_spec([NotNull] FortranParser.Type_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.declaration_type_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclaration_type_spec([NotNull] FortranParser.Declaration_type_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.declaration_type_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclaration_type_spec([NotNull] FortranParser.Declaration_type_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.intrinsic_type_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntrinsic_type_spec([NotNull] FortranParser.Intrinsic_type_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.intrinsic_type_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntrinsic_type_spec([NotNull] FortranParser.Intrinsic_type_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.integer_type_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInteger_type_spec([NotNull] FortranParser.Integer_type_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.integer_type_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInteger_type_spec([NotNull] FortranParser.Integer_type_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.kind_selector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterKind_selector([NotNull] FortranParser.Kind_selectorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.kind_selector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitKind_selector([NotNull] FortranParser.Kind_selectorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.signed_int_literal_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSigned_int_literal_constant([NotNull] FortranParser.Signed_int_literal_constantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.signed_int_literal_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSigned_int_literal_constant([NotNull] FortranParser.Signed_int_literal_constantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.int_literal_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInt_literal_constant([NotNull] FortranParser.Int_literal_constantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.int_literal_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInt_literal_constant([NotNull] FortranParser.Int_literal_constantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.kind_param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterKind_param([NotNull] FortranParser.Kind_paramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.kind_param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitKind_param([NotNull] FortranParser.Kind_paramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.signed_digit_string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSigned_digit_string([NotNull] FortranParser.Signed_digit_stringContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.signed_digit_string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSigned_digit_string([NotNull] FortranParser.Signed_digit_stringContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.digit_string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDigit_string([NotNull] FortranParser.Digit_stringContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.digit_string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDigit_string([NotNull] FortranParser.Digit_stringContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.sign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSign([NotNull] FortranParser.SignContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.sign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSign([NotNull] FortranParser.SignContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.signed_real_literal_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSigned_real_literal_constant([NotNull] FortranParser.Signed_real_literal_constantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.signed_real_literal_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSigned_real_literal_constant([NotNull] FortranParser.Signed_real_literal_constantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.real_literal_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReal_literal_constant([NotNull] FortranParser.Real_literal_constantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.real_literal_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReal_literal_constant([NotNull] FortranParser.Real_literal_constantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.significand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSignificand([NotNull] FortranParser.SignificandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.significand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSignificand([NotNull] FortranParser.SignificandContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.exponent_letter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExponent_letter([NotNull] FortranParser.Exponent_letterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.exponent_letter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExponent_letter([NotNull] FortranParser.Exponent_letterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.exponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExponent([NotNull] FortranParser.ExponentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.exponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExponent([NotNull] FortranParser.ExponentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.complex_literal_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComplex_literal_constant([NotNull] FortranParser.Complex_literal_constantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.complex_literal_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComplex_literal_constant([NotNull] FortranParser.Complex_literal_constantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.real_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReal_part([NotNull] FortranParser.Real_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.real_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReal_part([NotNull] FortranParser.Real_partContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.imag_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImag_part([NotNull] FortranParser.Imag_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.imag_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImag_part([NotNull] FortranParser.Imag_partContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.char_selector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterChar_selector([NotNull] FortranParser.Char_selectorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.char_selector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitChar_selector([NotNull] FortranParser.Char_selectorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.length_selector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLength_selector([NotNull] FortranParser.Length_selectorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.length_selector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLength_selector([NotNull] FortranParser.Length_selectorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.char_length"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterChar_length([NotNull] FortranParser.Char_lengthContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.char_length"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitChar_length([NotNull] FortranParser.Char_lengthContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.char_literal_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterChar_literal_constant([NotNull] FortranParser.Char_literal_constantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.char_literal_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitChar_literal_constant([NotNull] FortranParser.Char_literal_constantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.logical_literal_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogical_literal_constant([NotNull] FortranParser.Logical_literal_constantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.logical_literal_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogical_literal_constant([NotNull] FortranParser.Logical_literal_constantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.derived_type_def"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDerived_type_def([NotNull] FortranParser.Derived_type_defContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.derived_type_def"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDerived_type_def([NotNull] FortranParser.Derived_type_defContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.derived_type_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDerived_type_stmt([NotNull] FortranParser.Derived_type_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.derived_type_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDerived_type_stmt([NotNull] FortranParser.Derived_type_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.type_attr_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_attr_spec([NotNull] FortranParser.Type_attr_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.type_attr_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_attr_spec([NotNull] FortranParser.Type_attr_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.private_or_sequence"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrivate_or_sequence([NotNull] FortranParser.Private_or_sequenceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.private_or_sequence"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrivate_or_sequence([NotNull] FortranParser.Private_or_sequenceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.end_type_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnd_type_stmt([NotNull] FortranParser.End_type_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.end_type_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnd_type_stmt([NotNull] FortranParser.End_type_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.sequence_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSequence_stmt([NotNull] FortranParser.Sequence_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.sequence_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSequence_stmt([NotNull] FortranParser.Sequence_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.type_param_def_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_param_def_stmt([NotNull] FortranParser.Type_param_def_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.type_param_def_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_param_def_stmt([NotNull] FortranParser.Type_param_def_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.type_param_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_param_decl([NotNull] FortranParser.Type_param_declContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.type_param_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_param_decl([NotNull] FortranParser.Type_param_declContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.type_param_attr_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_param_attr_spec([NotNull] FortranParser.Type_param_attr_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.type_param_attr_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_param_attr_spec([NotNull] FortranParser.Type_param_attr_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.component_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComponent_part([NotNull] FortranParser.Component_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.component_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComponent_part([NotNull] FortranParser.Component_partContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.component_def_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComponent_def_stmt([NotNull] FortranParser.Component_def_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.component_def_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComponent_def_stmt([NotNull] FortranParser.Component_def_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.data_component_def_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterData_component_def_stmt([NotNull] FortranParser.Data_component_def_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.data_component_def_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitData_component_def_stmt([NotNull] FortranParser.Data_component_def_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.component_attr_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComponent_attr_spec([NotNull] FortranParser.Component_attr_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.component_attr_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComponent_attr_spec([NotNull] FortranParser.Component_attr_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.component_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComponent_decl([NotNull] FortranParser.Component_declContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.component_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComponent_decl([NotNull] FortranParser.Component_declContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.component_array_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComponent_array_spec([NotNull] FortranParser.Component_array_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.component_array_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComponent_array_spec([NotNull] FortranParser.Component_array_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.proc_component_def_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProc_component_def_stmt([NotNull] FortranParser.Proc_component_def_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.proc_component_def_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProc_component_def_stmt([NotNull] FortranParser.Proc_component_def_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.proc_component_attr_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProc_component_attr_spec([NotNull] FortranParser.Proc_component_attr_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.proc_component_attr_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProc_component_attr_spec([NotNull] FortranParser.Proc_component_attr_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.component_initialization"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComponent_initialization([NotNull] FortranParser.Component_initializationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.component_initialization"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComponent_initialization([NotNull] FortranParser.Component_initializationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.initial_data_target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInitial_data_target([NotNull] FortranParser.Initial_data_targetContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.initial_data_target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInitial_data_target([NotNull] FortranParser.Initial_data_targetContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.private_components_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrivate_components_stmt([NotNull] FortranParser.Private_components_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.private_components_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrivate_components_stmt([NotNull] FortranParser.Private_components_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.type_bound_procedure_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_bound_procedure_part([NotNull] FortranParser.Type_bound_procedure_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.type_bound_procedure_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_bound_procedure_part([NotNull] FortranParser.Type_bound_procedure_partContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.binding_private_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBinding_private_stmt([NotNull] FortranParser.Binding_private_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.binding_private_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBinding_private_stmt([NotNull] FortranParser.Binding_private_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.type_bound_proc_binding"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_bound_proc_binding([NotNull] FortranParser.Type_bound_proc_bindingContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.type_bound_proc_binding"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_bound_proc_binding([NotNull] FortranParser.Type_bound_proc_bindingContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.type_bound_procedure_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_bound_procedure_stmt([NotNull] FortranParser.Type_bound_procedure_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.type_bound_procedure_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_bound_procedure_stmt([NotNull] FortranParser.Type_bound_procedure_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.type_bound_proc_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_bound_proc_decl([NotNull] FortranParser.Type_bound_proc_declContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.type_bound_proc_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_bound_proc_decl([NotNull] FortranParser.Type_bound_proc_declContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.type_bound_generic_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_bound_generic_stmt([NotNull] FortranParser.Type_bound_generic_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.type_bound_generic_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_bound_generic_stmt([NotNull] FortranParser.Type_bound_generic_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.binding_attr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBinding_attr([NotNull] FortranParser.Binding_attrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.binding_attr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBinding_attr([NotNull] FortranParser.Binding_attrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.final_procedure_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFinal_procedure_stmt([NotNull] FortranParser.Final_procedure_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.final_procedure_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFinal_procedure_stmt([NotNull] FortranParser.Final_procedure_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.derived_type_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDerived_type_spec([NotNull] FortranParser.Derived_type_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.derived_type_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDerived_type_spec([NotNull] FortranParser.Derived_type_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.type_param_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_param_spec([NotNull] FortranParser.Type_param_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.type_param_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_param_spec([NotNull] FortranParser.Type_param_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.structure_constructor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStructure_constructor([NotNull] FortranParser.Structure_constructorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.structure_constructor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStructure_constructor([NotNull] FortranParser.Structure_constructorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.component_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComponent_spec([NotNull] FortranParser.Component_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.component_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComponent_spec([NotNull] FortranParser.Component_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.component_data_source"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComponent_data_source([NotNull] FortranParser.Component_data_sourceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.component_data_source"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComponent_data_source([NotNull] FortranParser.Component_data_sourceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.enum_def"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnum_def([NotNull] FortranParser.Enum_defContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.enum_def"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnum_def([NotNull] FortranParser.Enum_defContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.enum_def_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnum_def_stmt([NotNull] FortranParser.Enum_def_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.enum_def_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnum_def_stmt([NotNull] FortranParser.Enum_def_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.enumerator_def_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumerator_def_stmt([NotNull] FortranParser.Enumerator_def_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.enumerator_def_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumerator_def_stmt([NotNull] FortranParser.Enumerator_def_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.enumerator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumerator([NotNull] FortranParser.EnumeratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.enumerator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumerator([NotNull] FortranParser.EnumeratorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.end_enum_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnd_enum_stmt([NotNull] FortranParser.End_enum_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.end_enum_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnd_enum_stmt([NotNull] FortranParser.End_enum_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.enum_type_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnum_type_spec([NotNull] FortranParser.Enum_type_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.enum_type_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnum_type_spec([NotNull] FortranParser.Enum_type_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.enum_constructor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnum_constructor([NotNull] FortranParser.Enum_constructorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.enum_constructor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnum_constructor([NotNull] FortranParser.Enum_constructorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.enumeration_type_def"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumeration_type_def([NotNull] FortranParser.Enumeration_type_defContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.enumeration_type_def"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumeration_type_def([NotNull] FortranParser.Enumeration_type_defContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.enumeration_type_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumeration_type_stmt([NotNull] FortranParser.Enumeration_type_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.enumeration_type_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumeration_type_stmt([NotNull] FortranParser.Enumeration_type_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.enumeration_enumerator_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumeration_enumerator_stmt([NotNull] FortranParser.Enumeration_enumerator_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.enumeration_enumerator_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumeration_enumerator_stmt([NotNull] FortranParser.Enumeration_enumerator_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.end_enumeration_type_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnd_enumeration_type_stmt([NotNull] FortranParser.End_enumeration_type_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.end_enumeration_type_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnd_enumeration_type_stmt([NotNull] FortranParser.End_enumeration_type_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.enumeration_type_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumeration_type_spec([NotNull] FortranParser.Enumeration_type_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.enumeration_type_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumeration_type_spec([NotNull] FortranParser.Enumeration_type_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.enumeration_constructor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumeration_constructor([NotNull] FortranParser.Enumeration_constructorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.enumeration_constructor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumeration_constructor([NotNull] FortranParser.Enumeration_constructorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.boz_literal_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoz_literal_constant([NotNull] FortranParser.Boz_literal_constantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.boz_literal_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoz_literal_constant([NotNull] FortranParser.Boz_literal_constantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.array_constructor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArray_constructor([NotNull] FortranParser.Array_constructorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.array_constructor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArray_constructor([NotNull] FortranParser.Array_constructorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.ac_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAc_spec([NotNull] FortranParser.Ac_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.ac_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAc_spec([NotNull] FortranParser.Ac_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.lbracket"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLbracket([NotNull] FortranParser.LbracketContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.lbracket"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLbracket([NotNull] FortranParser.LbracketContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.rbracket"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRbracket([NotNull] FortranParser.RbracketContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.rbracket"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRbracket([NotNull] FortranParser.RbracketContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.ac_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAc_value([NotNull] FortranParser.Ac_valueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.ac_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAc_value([NotNull] FortranParser.Ac_valueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.ac_implied_do"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAc_implied_do([NotNull] FortranParser.Ac_implied_doContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.ac_implied_do"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAc_implied_do([NotNull] FortranParser.Ac_implied_doContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.ac_implied_do_control"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAc_implied_do_control([NotNull] FortranParser.Ac_implied_do_controlContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.ac_implied_do_control"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAc_implied_do_control([NotNull] FortranParser.Ac_implied_do_controlContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.ac_do_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAc_do_variable([NotNull] FortranParser.Ac_do_variableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.ac_do_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAc_do_variable([NotNull] FortranParser.Ac_do_variableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.type_declaration_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_declaration_stmt([NotNull] FortranParser.Type_declaration_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.type_declaration_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_declaration_stmt([NotNull] FortranParser.Type_declaration_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.attr_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttr_spec([NotNull] FortranParser.Attr_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.attr_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttr_spec([NotNull] FortranParser.Attr_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.entity_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEntity_decl([NotNull] FortranParser.Entity_declContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.entity_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEntity_decl([NotNull] FortranParser.Entity_declContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.object_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObject_name([NotNull] FortranParser.Object_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.object_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObject_name([NotNull] FortranParser.Object_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.initialization"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInitialization([NotNull] FortranParser.InitializationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.initialization"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInitialization([NotNull] FortranParser.InitializationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.null_init"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNull_init([NotNull] FortranParser.Null_initContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.null_init"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNull_init([NotNull] FortranParser.Null_initContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.access_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAccess_spec([NotNull] FortranParser.Access_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.access_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAccess_spec([NotNull] FortranParser.Access_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.language_binding_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLanguage_binding_spec([NotNull] FortranParser.Language_binding_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.language_binding_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLanguage_binding_spec([NotNull] FortranParser.Language_binding_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.coarray_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCoarray_spec([NotNull] FortranParser.Coarray_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.coarray_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCoarray_spec([NotNull] FortranParser.Coarray_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.deferred_coshape_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeferred_coshape_spec([NotNull] FortranParser.Deferred_coshape_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.deferred_coshape_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeferred_coshape_spec([NotNull] FortranParser.Deferred_coshape_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.explicit_coshape_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplicit_coshape_spec([NotNull] FortranParser.Explicit_coshape_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.explicit_coshape_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplicit_coshape_spec([NotNull] FortranParser.Explicit_coshape_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.lower_cobound"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLower_cobound([NotNull] FortranParser.Lower_coboundContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.lower_cobound"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLower_cobound([NotNull] FortranParser.Lower_coboundContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.upper_cobound"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUpper_cobound([NotNull] FortranParser.Upper_coboundContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.upper_cobound"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUpper_cobound([NotNull] FortranParser.Upper_coboundContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.array_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArray_spec([NotNull] FortranParser.Array_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.array_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArray_spec([NotNull] FortranParser.Array_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.explicit_shape_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplicit_shape_spec([NotNull] FortranParser.Explicit_shape_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.explicit_shape_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplicit_shape_spec([NotNull] FortranParser.Explicit_shape_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.lower_bound"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLower_bound([NotNull] FortranParser.Lower_boundContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.lower_bound"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLower_bound([NotNull] FortranParser.Lower_boundContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.upper_bound"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUpper_bound([NotNull] FortranParser.Upper_boundContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.upper_bound"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUpper_bound([NotNull] FortranParser.Upper_boundContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.explicit_shape_bounds_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplicit_shape_bounds_spec([NotNull] FortranParser.Explicit_shape_bounds_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.explicit_shape_bounds_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplicit_shape_bounds_spec([NotNull] FortranParser.Explicit_shape_bounds_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.explicit_bounds_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplicit_bounds_expr([NotNull] FortranParser.Explicit_bounds_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.explicit_bounds_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplicit_bounds_expr([NotNull] FortranParser.Explicit_bounds_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.assumed_shape_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssumed_shape_spec([NotNull] FortranParser.Assumed_shape_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.assumed_shape_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssumed_shape_spec([NotNull] FortranParser.Assumed_shape_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.assumed_shape_bounds_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssumed_shape_bounds_spec([NotNull] FortranParser.Assumed_shape_bounds_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.assumed_shape_bounds_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssumed_shape_bounds_spec([NotNull] FortranParser.Assumed_shape_bounds_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.deferred_shape_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeferred_shape_spec([NotNull] FortranParser.Deferred_shape_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.deferred_shape_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeferred_shape_spec([NotNull] FortranParser.Deferred_shape_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.assumed_implied_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssumed_implied_spec([NotNull] FortranParser.Assumed_implied_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.assumed_implied_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssumed_implied_spec([NotNull] FortranParser.Assumed_implied_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.assumed_size_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssumed_size_spec([NotNull] FortranParser.Assumed_size_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.assumed_size_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssumed_size_spec([NotNull] FortranParser.Assumed_size_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.implied_shape_or_assumed_size_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImplied_shape_or_assumed_size_spec([NotNull] FortranParser.Implied_shape_or_assumed_size_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.implied_shape_or_assumed_size_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImplied_shape_or_assumed_size_spec([NotNull] FortranParser.Implied_shape_or_assumed_size_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.implied_shape_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImplied_shape_spec([NotNull] FortranParser.Implied_shape_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.implied_shape_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImplied_shape_spec([NotNull] FortranParser.Implied_shape_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.assumed_rank_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssumed_rank_spec([NotNull] FortranParser.Assumed_rank_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.assumed_rank_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssumed_rank_spec([NotNull] FortranParser.Assumed_rank_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.intent_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntent_spec([NotNull] FortranParser.Intent_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.intent_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntent_spec([NotNull] FortranParser.Intent_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.rank_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRank_clause([NotNull] FortranParser.Rank_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.rank_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRank_clause([NotNull] FortranParser.Rank_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.access_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAccess_stmt([NotNull] FortranParser.Access_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.access_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAccess_stmt([NotNull] FortranParser.Access_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.access_id"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAccess_id([NotNull] FortranParser.Access_idContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.access_id"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAccess_id([NotNull] FortranParser.Access_idContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.allocatable_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAllocatable_stmt([NotNull] FortranParser.Allocatable_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.allocatable_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAllocatable_stmt([NotNull] FortranParser.Allocatable_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.allocatable_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAllocatable_decl([NotNull] FortranParser.Allocatable_declContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.allocatable_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAllocatable_decl([NotNull] FortranParser.Allocatable_declContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.asynchronous_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAsynchronous_stmt([NotNull] FortranParser.Asynchronous_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.asynchronous_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAsynchronous_stmt([NotNull] FortranParser.Asynchronous_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.bind_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBind_stmt([NotNull] FortranParser.Bind_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.bind_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBind_stmt([NotNull] FortranParser.Bind_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.bind_entity"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBind_entity([NotNull] FortranParser.Bind_entityContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.bind_entity"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBind_entity([NotNull] FortranParser.Bind_entityContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.codimension_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCodimension_stmt([NotNull] FortranParser.Codimension_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.codimension_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCodimension_stmt([NotNull] FortranParser.Codimension_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.codimension_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCodimension_decl([NotNull] FortranParser.Codimension_declContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.codimension_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCodimension_decl([NotNull] FortranParser.Codimension_declContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.contiguous_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterContiguous_stmt([NotNull] FortranParser.Contiguous_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.contiguous_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitContiguous_stmt([NotNull] FortranParser.Contiguous_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.data_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterData_stmt([NotNull] FortranParser.Data_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.data_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitData_stmt([NotNull] FortranParser.Data_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.data_stmt_set"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterData_stmt_set([NotNull] FortranParser.Data_stmt_setContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.data_stmt_set"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitData_stmt_set([NotNull] FortranParser.Data_stmt_setContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.data_stmt_object"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterData_stmt_object([NotNull] FortranParser.Data_stmt_objectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.data_stmt_object"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitData_stmt_object([NotNull] FortranParser.Data_stmt_objectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.data_implied_do"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterData_implied_do([NotNull] FortranParser.Data_implied_doContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.data_implied_do"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitData_implied_do([NotNull] FortranParser.Data_implied_doContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.data_i_do_object"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterData_i_do_object([NotNull] FortranParser.Data_i_do_objectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.data_i_do_object"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitData_i_do_object([NotNull] FortranParser.Data_i_do_objectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.data_i_do_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterData_i_do_variable([NotNull] FortranParser.Data_i_do_variableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.data_i_do_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitData_i_do_variable([NotNull] FortranParser.Data_i_do_variableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.data_stmt_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterData_stmt_value([NotNull] FortranParser.Data_stmt_valueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.data_stmt_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitData_stmt_value([NotNull] FortranParser.Data_stmt_valueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.data_stmt_repeat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterData_stmt_repeat([NotNull] FortranParser.Data_stmt_repeatContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.data_stmt_repeat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitData_stmt_repeat([NotNull] FortranParser.Data_stmt_repeatContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.data_stmt_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterData_stmt_constant([NotNull] FortranParser.Data_stmt_constantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.data_stmt_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitData_stmt_constant([NotNull] FortranParser.Data_stmt_constantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.int_constant_subobject"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInt_constant_subobject([NotNull] FortranParser.Int_constant_subobjectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.int_constant_subobject"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInt_constant_subobject([NotNull] FortranParser.Int_constant_subobjectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.constant_subobject"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstant_subobject([NotNull] FortranParser.Constant_subobjectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.constant_subobject"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstant_subobject([NotNull] FortranParser.Constant_subobjectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.dimension_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDimension_stmt([NotNull] FortranParser.Dimension_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.dimension_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDimension_stmt([NotNull] FortranParser.Dimension_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.intent_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntent_stmt([NotNull] FortranParser.Intent_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.intent_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntent_stmt([NotNull] FortranParser.Intent_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.optional_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptional_stmt([NotNull] FortranParser.Optional_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.optional_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptional_stmt([NotNull] FortranParser.Optional_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.parameter_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameter_stmt([NotNull] FortranParser.Parameter_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.parameter_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameter_stmt([NotNull] FortranParser.Parameter_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.named_constant_def"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamed_constant_def([NotNull] FortranParser.Named_constant_defContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.named_constant_def"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamed_constant_def([NotNull] FortranParser.Named_constant_defContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.pointer_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPointer_stmt([NotNull] FortranParser.Pointer_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.pointer_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPointer_stmt([NotNull] FortranParser.Pointer_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.pointer_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPointer_decl([NotNull] FortranParser.Pointer_declContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.pointer_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPointer_decl([NotNull] FortranParser.Pointer_declContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.protected_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProtected_stmt([NotNull] FortranParser.Protected_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.protected_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProtected_stmt([NotNull] FortranParser.Protected_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.save_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSave_stmt([NotNull] FortranParser.Save_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.save_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSave_stmt([NotNull] FortranParser.Save_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.saved_entity"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSaved_entity([NotNull] FortranParser.Saved_entityContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.saved_entity"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSaved_entity([NotNull] FortranParser.Saved_entityContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.proc_pointer_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProc_pointer_name([NotNull] FortranParser.Proc_pointer_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.proc_pointer_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProc_pointer_name([NotNull] FortranParser.Proc_pointer_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.target_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTarget_stmt([NotNull] FortranParser.Target_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.target_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTarget_stmt([NotNull] FortranParser.Target_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.target_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTarget_decl([NotNull] FortranParser.Target_declContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.target_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTarget_decl([NotNull] FortranParser.Target_declContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.value_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValue_stmt([NotNull] FortranParser.Value_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.value_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValue_stmt([NotNull] FortranParser.Value_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.volatile_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVolatile_stmt([NotNull] FortranParser.Volatile_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.volatile_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVolatile_stmt([NotNull] FortranParser.Volatile_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.implicit_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImplicit_stmt([NotNull] FortranParser.Implicit_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.implicit_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImplicit_stmt([NotNull] FortranParser.Implicit_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.implicit_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImplicit_spec([NotNull] FortranParser.Implicit_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.implicit_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImplicit_spec([NotNull] FortranParser.Implicit_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.letter_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLetter_spec([NotNull] FortranParser.Letter_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.letter_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLetter_spec([NotNull] FortranParser.Letter_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.implicit_none_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImplicit_none_spec([NotNull] FortranParser.Implicit_none_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.implicit_none_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImplicit_none_spec([NotNull] FortranParser.Implicit_none_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.import_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImport_stmt([NotNull] FortranParser.Import_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.import_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImport_stmt([NotNull] FortranParser.Import_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.namelist_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamelist_stmt([NotNull] FortranParser.Namelist_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.namelist_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamelist_stmt([NotNull] FortranParser.Namelist_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.namelist_group_object"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamelist_group_object([NotNull] FortranParser.Namelist_group_objectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.namelist_group_object"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamelist_group_object([NotNull] FortranParser.Namelist_group_objectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.equivalence_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEquivalence_stmt([NotNull] FortranParser.Equivalence_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.equivalence_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEquivalence_stmt([NotNull] FortranParser.Equivalence_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.equivalence_set"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEquivalence_set([NotNull] FortranParser.Equivalence_setContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.equivalence_set"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEquivalence_set([NotNull] FortranParser.Equivalence_setContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.equivalence_object"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEquivalence_object([NotNull] FortranParser.Equivalence_objectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.equivalence_object"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEquivalence_object([NotNull] FortranParser.Equivalence_objectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.common_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCommon_stmt([NotNull] FortranParser.Common_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.common_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCommon_stmt([NotNull] FortranParser.Common_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.common_block_object"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCommon_block_object([NotNull] FortranParser.Common_block_objectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.common_block_object"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCommon_block_object([NotNull] FortranParser.Common_block_objectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.designator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDesignator([NotNull] FortranParser.DesignatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.designator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDesignator([NotNull] FortranParser.DesignatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable([NotNull] FortranParser.VariableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable([NotNull] FortranParser.VariableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.variable_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable_name([NotNull] FortranParser.Variable_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.variable_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable_name([NotNull] FortranParser.Variable_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.logical_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogical_variable([NotNull] FortranParser.Logical_variableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.logical_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogical_variable([NotNull] FortranParser.Logical_variableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.char_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterChar_variable([NotNull] FortranParser.Char_variableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.char_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitChar_variable([NotNull] FortranParser.Char_variableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.default_char_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefault_char_variable([NotNull] FortranParser.Default_char_variableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.default_char_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefault_char_variable([NotNull] FortranParser.Default_char_variableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.int_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInt_variable([NotNull] FortranParser.Int_variableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.int_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInt_variable([NotNull] FortranParser.Int_variableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.substring"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubstring([NotNull] FortranParser.SubstringContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.substring"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubstring([NotNull] FortranParser.SubstringContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.parent_string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParent_string([NotNull] FortranParser.Parent_stringContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.parent_string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParent_string([NotNull] FortranParser.Parent_stringContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.substring_range"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubstring_range([NotNull] FortranParser.Substring_rangeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.substring_range"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubstring_range([NotNull] FortranParser.Substring_rangeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.data_ref"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterData_ref([NotNull] FortranParser.Data_refContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.data_ref"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitData_ref([NotNull] FortranParser.Data_refContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.part_ref"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPart_ref([NotNull] FortranParser.Part_refContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.part_ref"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPart_ref([NotNull] FortranParser.Part_refContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.structure_component"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStructure_component([NotNull] FortranParser.Structure_componentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.structure_component"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStructure_component([NotNull] FortranParser.Structure_componentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.coindexed_named_object"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCoindexed_named_object([NotNull] FortranParser.Coindexed_named_objectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.coindexed_named_object"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCoindexed_named_object([NotNull] FortranParser.Coindexed_named_objectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.complex_part_designator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComplex_part_designator([NotNull] FortranParser.Complex_part_designatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.complex_part_designator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComplex_part_designator([NotNull] FortranParser.Complex_part_designatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.type_param_inquiry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_param_inquiry([NotNull] FortranParser.Type_param_inquiryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.type_param_inquiry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_param_inquiry([NotNull] FortranParser.Type_param_inquiryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.array_element"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArray_element([NotNull] FortranParser.Array_elementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.array_element"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArray_element([NotNull] FortranParser.Array_elementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.array_section"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArray_section([NotNull] FortranParser.Array_sectionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.array_section"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArray_section([NotNull] FortranParser.Array_sectionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.subscript"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubscript([NotNull] FortranParser.SubscriptContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.subscript"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubscript([NotNull] FortranParser.SubscriptContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.multiple_subscript"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiple_subscript([NotNull] FortranParser.Multiple_subscriptContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.multiple_subscript"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiple_subscript([NotNull] FortranParser.Multiple_subscriptContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.section_subscript"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSection_subscript([NotNull] FortranParser.Section_subscriptContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.section_subscript"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSection_subscript([NotNull] FortranParser.Section_subscriptContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.subscript_triplet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubscript_triplet([NotNull] FortranParser.Subscript_tripletContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.subscript_triplet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubscript_triplet([NotNull] FortranParser.Subscript_tripletContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.multiple_subscript_triplet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiple_subscript_triplet([NotNull] FortranParser.Multiple_subscript_tripletContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.multiple_subscript_triplet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiple_subscript_triplet([NotNull] FortranParser.Multiple_subscript_tripletContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.stride"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStride([NotNull] FortranParser.StrideContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.stride"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStride([NotNull] FortranParser.StrideContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.vector_subscript"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVector_subscript([NotNull] FortranParser.Vector_subscriptContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.vector_subscript"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVector_subscript([NotNull] FortranParser.Vector_subscriptContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.image_selector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImage_selector([NotNull] FortranParser.Image_selectorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.image_selector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImage_selector([NotNull] FortranParser.Image_selectorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.cosubscript"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCosubscript([NotNull] FortranParser.CosubscriptContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.cosubscript"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCosubscript([NotNull] FortranParser.CosubscriptContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.image_selector_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImage_selector_spec([NotNull] FortranParser.Image_selector_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.image_selector_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImage_selector_spec([NotNull] FortranParser.Image_selector_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.allocate_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAllocate_stmt([NotNull] FortranParser.Allocate_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.allocate_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAllocate_stmt([NotNull] FortranParser.Allocate_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.alloc_opt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlloc_opt([NotNull] FortranParser.Alloc_optContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.alloc_opt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlloc_opt([NotNull] FortranParser.Alloc_optContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.errmsg_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterErrmsg_variable([NotNull] FortranParser.Errmsg_variableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.errmsg_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitErrmsg_variable([NotNull] FortranParser.Errmsg_variableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.source_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSource_expr([NotNull] FortranParser.Source_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.source_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSource_expr([NotNull] FortranParser.Source_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.allocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAllocation([NotNull] FortranParser.AllocationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.allocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAllocation([NotNull] FortranParser.AllocationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.allocate_object"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAllocate_object([NotNull] FortranParser.Allocate_objectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.allocate_object"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAllocate_object([NotNull] FortranParser.Allocate_objectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.allocate_shape_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAllocate_shape_spec([NotNull] FortranParser.Allocate_shape_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.allocate_shape_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAllocate_shape_spec([NotNull] FortranParser.Allocate_shape_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.lower_bound_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLower_bound_expr([NotNull] FortranParser.Lower_bound_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.lower_bound_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLower_bound_expr([NotNull] FortranParser.Lower_bound_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.lower_bounds_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLower_bounds_expr([NotNull] FortranParser.Lower_bounds_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.lower_bounds_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLower_bounds_expr([NotNull] FortranParser.Lower_bounds_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.upper_bound_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUpper_bound_expr([NotNull] FortranParser.Upper_bound_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.upper_bound_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUpper_bound_expr([NotNull] FortranParser.Upper_bound_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.upper_bounds_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUpper_bounds_expr([NotNull] FortranParser.Upper_bounds_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.upper_bounds_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUpper_bounds_expr([NotNull] FortranParser.Upper_bounds_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.allocate_coarray_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAllocate_coarray_spec([NotNull] FortranParser.Allocate_coarray_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.allocate_coarray_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAllocate_coarray_spec([NotNull] FortranParser.Allocate_coarray_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.allocate_coshape_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAllocate_coshape_spec([NotNull] FortranParser.Allocate_coshape_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.allocate_coshape_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAllocate_coshape_spec([NotNull] FortranParser.Allocate_coshape_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.nullify_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNullify_stmt([NotNull] FortranParser.Nullify_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.nullify_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNullify_stmt([NotNull] FortranParser.Nullify_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.pointer_object"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPointer_object([NotNull] FortranParser.Pointer_objectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.pointer_object"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPointer_object([NotNull] FortranParser.Pointer_objectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.deallocate_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeallocate_stmt([NotNull] FortranParser.Deallocate_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.deallocate_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeallocate_stmt([NotNull] FortranParser.Deallocate_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.dealloc_opt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDealloc_opt([NotNull] FortranParser.Dealloc_optContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.dealloc_opt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDealloc_opt([NotNull] FortranParser.Dealloc_optContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.stat_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStat_variable([NotNull] FortranParser.Stat_variableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.stat_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStat_variable([NotNull] FortranParser.Stat_variableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimary([NotNull] FortranParser.PrimaryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimary([NotNull] FortranParser.PrimaryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.conditional_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditional_expr([NotNull] FortranParser.Conditional_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.conditional_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditional_expr([NotNull] FortranParser.Conditional_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.level_1_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLevel_1_expr([NotNull] FortranParser.Level_1_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.level_1_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLevel_1_expr([NotNull] FortranParser.Level_1_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.mult_operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMult_operand([NotNull] FortranParser.Mult_operandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.mult_operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMult_operand([NotNull] FortranParser.Mult_operandContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.add_operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdd_operand([NotNull] FortranParser.Add_operandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.add_operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdd_operand([NotNull] FortranParser.Add_operandContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.level_2_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLevel_2_expr([NotNull] FortranParser.Level_2_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.level_2_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLevel_2_expr([NotNull] FortranParser.Level_2_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.level_3_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLevel_3_expr([NotNull] FortranParser.Level_3_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.level_3_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLevel_3_expr([NotNull] FortranParser.Level_3_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.level_4_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLevel_4_expr([NotNull] FortranParser.Level_4_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.level_4_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLevel_4_expr([NotNull] FortranParser.Level_4_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.and_operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnd_operand([NotNull] FortranParser.And_operandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.and_operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnd_operand([NotNull] FortranParser.And_operandContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.or_operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOr_operand([NotNull] FortranParser.Or_operandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.or_operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOr_operand([NotNull] FortranParser.Or_operandContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.equiv_operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEquiv_operand([NotNull] FortranParser.Equiv_operandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.equiv_operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEquiv_operand([NotNull] FortranParser.Equiv_operandContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.level_5_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLevel_5_expr([NotNull] FortranParser.Level_5_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.level_5_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLevel_5_expr([NotNull] FortranParser.Level_5_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr([NotNull] FortranParser.ExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr([NotNull] FortranParser.ExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.logical_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogical_expr([NotNull] FortranParser.Logical_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.logical_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogical_expr([NotNull] FortranParser.Logical_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.default_char_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefault_char_expr([NotNull] FortranParser.Default_char_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.default_char_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefault_char_expr([NotNull] FortranParser.Default_char_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.int_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInt_expr([NotNull] FortranParser.Int_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.int_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInt_expr([NotNull] FortranParser.Int_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.numeric_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumeric_expr([NotNull] FortranParser.Numeric_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.numeric_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumeric_expr([NotNull] FortranParser.Numeric_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.specification_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSpecification_expr([NotNull] FortranParser.Specification_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.specification_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSpecification_expr([NotNull] FortranParser.Specification_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.constant_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstant_expr([NotNull] FortranParser.Constant_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.constant_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstant_expr([NotNull] FortranParser.Constant_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.default_char_constant_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefault_char_constant_expr([NotNull] FortranParser.Default_char_constant_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.default_char_constant_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefault_char_constant_expr([NotNull] FortranParser.Default_char_constant_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.int_constant_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInt_constant_expr([NotNull] FortranParser.Int_constant_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.int_constant_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInt_constant_expr([NotNull] FortranParser.Int_constant_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.assignment_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment_stmt([NotNull] FortranParser.Assignment_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.assignment_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment_stmt([NotNull] FortranParser.Assignment_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.pointer_assignment_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPointer_assignment_stmt([NotNull] FortranParser.Pointer_assignment_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.pointer_assignment_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPointer_assignment_stmt([NotNull] FortranParser.Pointer_assignment_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.data_pointer_object"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterData_pointer_object([NotNull] FortranParser.Data_pointer_objectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.data_pointer_object"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitData_pointer_object([NotNull] FortranParser.Data_pointer_objectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.bounds_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBounds_spec([NotNull] FortranParser.Bounds_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.bounds_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBounds_spec([NotNull] FortranParser.Bounds_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.bounds_remapping"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBounds_remapping([NotNull] FortranParser.Bounds_remappingContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.bounds_remapping"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBounds_remapping([NotNull] FortranParser.Bounds_remappingContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.data_target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterData_target([NotNull] FortranParser.Data_targetContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.data_target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitData_target([NotNull] FortranParser.Data_targetContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.proc_pointer_object"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProc_pointer_object([NotNull] FortranParser.Proc_pointer_objectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.proc_pointer_object"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProc_pointer_object([NotNull] FortranParser.Proc_pointer_objectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.proc_component_ref"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProc_component_ref([NotNull] FortranParser.Proc_component_refContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.proc_component_ref"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProc_component_ref([NotNull] FortranParser.Proc_component_refContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.proc_target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProc_target([NotNull] FortranParser.Proc_targetContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.proc_target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProc_target([NotNull] FortranParser.Proc_targetContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.where_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhere_stmt([NotNull] FortranParser.Where_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.where_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhere_stmt([NotNull] FortranParser.Where_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.where_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhere_construct([NotNull] FortranParser.Where_constructContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.where_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhere_construct([NotNull] FortranParser.Where_constructContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.where_construct_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhere_construct_stmt([NotNull] FortranParser.Where_construct_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.where_construct_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhere_construct_stmt([NotNull] FortranParser.Where_construct_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.where_body_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhere_body_construct([NotNull] FortranParser.Where_body_constructContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.where_body_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhere_body_construct([NotNull] FortranParser.Where_body_constructContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.where_assignment_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhere_assignment_stmt([NotNull] FortranParser.Where_assignment_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.where_assignment_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhere_assignment_stmt([NotNull] FortranParser.Where_assignment_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.mask_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMask_expr([NotNull] FortranParser.Mask_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.mask_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMask_expr([NotNull] FortranParser.Mask_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.masked_elsewhere_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMasked_elsewhere_stmt([NotNull] FortranParser.Masked_elsewhere_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.masked_elsewhere_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMasked_elsewhere_stmt([NotNull] FortranParser.Masked_elsewhere_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.elsewhere_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElsewhere_stmt([NotNull] FortranParser.Elsewhere_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.elsewhere_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElsewhere_stmt([NotNull] FortranParser.Elsewhere_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.end_where_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnd_where_stmt([NotNull] FortranParser.End_where_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.end_where_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnd_where_stmt([NotNull] FortranParser.End_where_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.forall_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForall_construct([NotNull] FortranParser.Forall_constructContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.forall_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForall_construct([NotNull] FortranParser.Forall_constructContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.forall_construct_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForall_construct_stmt([NotNull] FortranParser.Forall_construct_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.forall_construct_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForall_construct_stmt([NotNull] FortranParser.Forall_construct_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.forall_body_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForall_body_construct([NotNull] FortranParser.Forall_body_constructContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.forall_body_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForall_body_construct([NotNull] FortranParser.Forall_body_constructContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.forall_assignment_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForall_assignment_stmt([NotNull] FortranParser.Forall_assignment_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.forall_assignment_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForall_assignment_stmt([NotNull] FortranParser.Forall_assignment_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.end_forall_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnd_forall_stmt([NotNull] FortranParser.End_forall_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.end_forall_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnd_forall_stmt([NotNull] FortranParser.End_forall_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.forall_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForall_stmt([NotNull] FortranParser.Forall_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.forall_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForall_stmt([NotNull] FortranParser.Forall_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] FortranParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] FortranParser.BlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.associate_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssociate_construct([NotNull] FortranParser.Associate_constructContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.associate_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssociate_construct([NotNull] FortranParser.Associate_constructContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.associate_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssociate_stmt([NotNull] FortranParser.Associate_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.associate_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssociate_stmt([NotNull] FortranParser.Associate_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.association"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssociation([NotNull] FortranParser.AssociationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.association"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssociation([NotNull] FortranParser.AssociationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.selector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelector([NotNull] FortranParser.SelectorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.selector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelector([NotNull] FortranParser.SelectorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.end_associate_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnd_associate_stmt([NotNull] FortranParser.End_associate_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.end_associate_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnd_associate_stmt([NotNull] FortranParser.End_associate_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.block_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock_construct([NotNull] FortranParser.Block_constructContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.block_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock_construct([NotNull] FortranParser.Block_constructContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.block_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock_stmt([NotNull] FortranParser.Block_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.block_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock_stmt([NotNull] FortranParser.Block_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.block_specification_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock_specification_part([NotNull] FortranParser.Block_specification_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.block_specification_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock_specification_part([NotNull] FortranParser.Block_specification_partContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.end_block_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnd_block_stmt([NotNull] FortranParser.End_block_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.end_block_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnd_block_stmt([NotNull] FortranParser.End_block_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.change_team_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterChange_team_construct([NotNull] FortranParser.Change_team_constructContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.change_team_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitChange_team_construct([NotNull] FortranParser.Change_team_constructContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.change_team_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterChange_team_stmt([NotNull] FortranParser.Change_team_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.change_team_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitChange_team_stmt([NotNull] FortranParser.Change_team_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.coarray_association"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCoarray_association([NotNull] FortranParser.Coarray_associationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.coarray_association"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCoarray_association([NotNull] FortranParser.Coarray_associationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.end_change_team_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnd_change_team_stmt([NotNull] FortranParser.End_change_team_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.end_change_team_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnd_change_team_stmt([NotNull] FortranParser.End_change_team_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.team_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTeam_value([NotNull] FortranParser.Team_valueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.team_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTeam_value([NotNull] FortranParser.Team_valueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.critical_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCritical_construct([NotNull] FortranParser.Critical_constructContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.critical_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCritical_construct([NotNull] FortranParser.Critical_constructContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.critical_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCritical_stmt([NotNull] FortranParser.Critical_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.critical_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCritical_stmt([NotNull] FortranParser.Critical_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.end_critical_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnd_critical_stmt([NotNull] FortranParser.End_critical_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.end_critical_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnd_critical_stmt([NotNull] FortranParser.End_critical_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.do_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDo_construct([NotNull] FortranParser.Do_constructContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.do_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDo_construct([NotNull] FortranParser.Do_constructContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.do_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDo_stmt([NotNull] FortranParser.Do_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.do_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDo_stmt([NotNull] FortranParser.Do_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.label_do_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLabel_do_stmt([NotNull] FortranParser.Label_do_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.label_do_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLabel_do_stmt([NotNull] FortranParser.Label_do_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.nonlabel_do_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNonlabel_do_stmt([NotNull] FortranParser.Nonlabel_do_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.nonlabel_do_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNonlabel_do_stmt([NotNull] FortranParser.Nonlabel_do_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.loop_control"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoop_control([NotNull] FortranParser.Loop_controlContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.loop_control"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoop_control([NotNull] FortranParser.Loop_controlContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.do_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDo_variable([NotNull] FortranParser.Do_variableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.do_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDo_variable([NotNull] FortranParser.Do_variableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.concurrent_header"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConcurrent_header([NotNull] FortranParser.Concurrent_headerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.concurrent_header"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConcurrent_header([NotNull] FortranParser.Concurrent_headerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.concurrent_control"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConcurrent_control([NotNull] FortranParser.Concurrent_controlContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.concurrent_control"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConcurrent_control([NotNull] FortranParser.Concurrent_controlContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.concurrent_limit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConcurrent_limit([NotNull] FortranParser.Concurrent_limitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.concurrent_limit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConcurrent_limit([NotNull] FortranParser.Concurrent_limitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.concurrent_step"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConcurrent_step([NotNull] FortranParser.Concurrent_stepContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.concurrent_step"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConcurrent_step([NotNull] FortranParser.Concurrent_stepContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.concurrent_locality"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConcurrent_locality([NotNull] FortranParser.Concurrent_localityContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.concurrent_locality"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConcurrent_locality([NotNull] FortranParser.Concurrent_localityContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.locality_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLocality_spec([NotNull] FortranParser.Locality_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.locality_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLocality_spec([NotNull] FortranParser.Locality_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.reduce_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReduce_operation([NotNull] FortranParser.Reduce_operationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.reduce_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReduce_operation([NotNull] FortranParser.Reduce_operationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.binary_reduce_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBinary_reduce_op([NotNull] FortranParser.Binary_reduce_opContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.binary_reduce_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBinary_reduce_op([NotNull] FortranParser.Binary_reduce_opContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.end_do"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnd_do([NotNull] FortranParser.End_doContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.end_do"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnd_do([NotNull] FortranParser.End_doContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.end_do_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnd_do_stmt([NotNull] FortranParser.End_do_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.end_do_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnd_do_stmt([NotNull] FortranParser.End_do_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.cycle_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCycle_stmt([NotNull] FortranParser.Cycle_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.cycle_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCycle_stmt([NotNull] FortranParser.Cycle_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.if_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf_construct([NotNull] FortranParser.If_constructContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.if_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf_construct([NotNull] FortranParser.If_constructContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.if_then_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf_then_stmt([NotNull] FortranParser.If_then_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.if_then_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf_then_stmt([NotNull] FortranParser.If_then_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.else_if_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElse_if_stmt([NotNull] FortranParser.Else_if_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.else_if_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElse_if_stmt([NotNull] FortranParser.Else_if_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.else_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElse_stmt([NotNull] FortranParser.Else_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.else_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElse_stmt([NotNull] FortranParser.Else_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.end_if_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnd_if_stmt([NotNull] FortranParser.End_if_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.end_if_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnd_if_stmt([NotNull] FortranParser.End_if_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.if_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf_stmt([NotNull] FortranParser.If_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.if_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf_stmt([NotNull] FortranParser.If_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.case_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCase_construct([NotNull] FortranParser.Case_constructContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.case_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCase_construct([NotNull] FortranParser.Case_constructContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.select_case_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelect_case_stmt([NotNull] FortranParser.Select_case_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.select_case_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelect_case_stmt([NotNull] FortranParser.Select_case_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.case_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCase_stmt([NotNull] FortranParser.Case_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.case_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCase_stmt([NotNull] FortranParser.Case_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.end_select_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnd_select_stmt([NotNull] FortranParser.End_select_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.end_select_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnd_select_stmt([NotNull] FortranParser.End_select_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.case_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCase_expr([NotNull] FortranParser.Case_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.case_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCase_expr([NotNull] FortranParser.Case_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.case_selector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCase_selector([NotNull] FortranParser.Case_selectorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.case_selector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCase_selector([NotNull] FortranParser.Case_selectorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.case_value_range"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCase_value_range([NotNull] FortranParser.Case_value_rangeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.case_value_range"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCase_value_range([NotNull] FortranParser.Case_value_rangeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.case_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCase_value([NotNull] FortranParser.Case_valueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.case_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCase_value([NotNull] FortranParser.Case_valueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.select_rank_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelect_rank_construct([NotNull] FortranParser.Select_rank_constructContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.select_rank_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelect_rank_construct([NotNull] FortranParser.Select_rank_constructContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.select_rank_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelect_rank_stmt([NotNull] FortranParser.Select_rank_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.select_rank_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelect_rank_stmt([NotNull] FortranParser.Select_rank_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.select_rank_case_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelect_rank_case_stmt([NotNull] FortranParser.Select_rank_case_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.select_rank_case_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelect_rank_case_stmt([NotNull] FortranParser.Select_rank_case_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.end_select_rank_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnd_select_rank_stmt([NotNull] FortranParser.End_select_rank_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.end_select_rank_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnd_select_rank_stmt([NotNull] FortranParser.End_select_rank_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.select_type_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelect_type_construct([NotNull] FortranParser.Select_type_constructContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.select_type_construct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelect_type_construct([NotNull] FortranParser.Select_type_constructContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.select_type_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelect_type_stmt([NotNull] FortranParser.Select_type_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.select_type_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelect_type_stmt([NotNull] FortranParser.Select_type_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.type_guard_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_guard_stmt([NotNull] FortranParser.Type_guard_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.type_guard_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_guard_stmt([NotNull] FortranParser.Type_guard_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.end_select_type_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnd_select_type_stmt([NotNull] FortranParser.End_select_type_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.end_select_type_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnd_select_type_stmt([NotNull] FortranParser.End_select_type_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.exit_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExit_stmt([NotNull] FortranParser.Exit_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.exit_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExit_stmt([NotNull] FortranParser.Exit_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.goto_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGoto_stmt([NotNull] FortranParser.Goto_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.goto_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGoto_stmt([NotNull] FortranParser.Goto_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.computed_goto_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComputed_goto_stmt([NotNull] FortranParser.Computed_goto_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.computed_goto_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComputed_goto_stmt([NotNull] FortranParser.Computed_goto_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.continue_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterContinue_stmt([NotNull] FortranParser.Continue_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.continue_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitContinue_stmt([NotNull] FortranParser.Continue_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.stop_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStop_stmt([NotNull] FortranParser.Stop_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.stop_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStop_stmt([NotNull] FortranParser.Stop_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.error_stop_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterError_stop_stmt([NotNull] FortranParser.Error_stop_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.error_stop_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitError_stop_stmt([NotNull] FortranParser.Error_stop_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.stop_code"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStop_code([NotNull] FortranParser.Stop_codeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.stop_code"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStop_code([NotNull] FortranParser.Stop_codeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.fail_image_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFail_image_stmt([NotNull] FortranParser.Fail_image_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.fail_image_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFail_image_stmt([NotNull] FortranParser.Fail_image_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.notify_wait_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNotify_wait_stmt([NotNull] FortranParser.Notify_wait_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.notify_wait_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNotify_wait_stmt([NotNull] FortranParser.Notify_wait_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.notify_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNotify_variable([NotNull] FortranParser.Notify_variableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.notify_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNotify_variable([NotNull] FortranParser.Notify_variableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.sync_all_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSync_all_stmt([NotNull] FortranParser.Sync_all_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.sync_all_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSync_all_stmt([NotNull] FortranParser.Sync_all_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.sync_stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSync_stat([NotNull] FortranParser.Sync_statContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.sync_stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSync_stat([NotNull] FortranParser.Sync_statContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.sync_images_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSync_images_stmt([NotNull] FortranParser.Sync_images_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.sync_images_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSync_images_stmt([NotNull] FortranParser.Sync_images_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.image_set"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImage_set([NotNull] FortranParser.Image_setContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.image_set"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImage_set([NotNull] FortranParser.Image_setContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.sync_memory_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSync_memory_stmt([NotNull] FortranParser.Sync_memory_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.sync_memory_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSync_memory_stmt([NotNull] FortranParser.Sync_memory_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.sync_team_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSync_team_stmt([NotNull] FortranParser.Sync_team_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.sync_team_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSync_team_stmt([NotNull] FortranParser.Sync_team_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.event_post_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEvent_post_stmt([NotNull] FortranParser.Event_post_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.event_post_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEvent_post_stmt([NotNull] FortranParser.Event_post_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.event_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEvent_variable([NotNull] FortranParser.Event_variableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.event_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEvent_variable([NotNull] FortranParser.Event_variableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.event_wait_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEvent_wait_stmt([NotNull] FortranParser.Event_wait_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.event_wait_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEvent_wait_stmt([NotNull] FortranParser.Event_wait_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.event_wait_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEvent_wait_spec([NotNull] FortranParser.Event_wait_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.event_wait_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEvent_wait_spec([NotNull] FortranParser.Event_wait_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.until_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUntil_spec([NotNull] FortranParser.Until_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.until_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUntil_spec([NotNull] FortranParser.Until_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.form_team_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForm_team_stmt([NotNull] FortranParser.Form_team_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.form_team_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForm_team_stmt([NotNull] FortranParser.Form_team_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.team_number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTeam_number([NotNull] FortranParser.Team_numberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.team_number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTeam_number([NotNull] FortranParser.Team_numberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.team_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTeam_variable([NotNull] FortranParser.Team_variableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.team_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTeam_variable([NotNull] FortranParser.Team_variableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.form_team_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForm_team_spec([NotNull] FortranParser.Form_team_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.form_team_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForm_team_spec([NotNull] FortranParser.Form_team_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.lock_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLock_stmt([NotNull] FortranParser.Lock_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.lock_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLock_stmt([NotNull] FortranParser.Lock_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.lock_stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLock_stat([NotNull] FortranParser.Lock_statContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.lock_stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLock_stat([NotNull] FortranParser.Lock_statContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.unlock_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnlock_stmt([NotNull] FortranParser.Unlock_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.unlock_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnlock_stmt([NotNull] FortranParser.Unlock_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.lock_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLock_variable([NotNull] FortranParser.Lock_variableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.lock_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLock_variable([NotNull] FortranParser.Lock_variableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.io_unit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIo_unit([NotNull] FortranParser.Io_unitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.io_unit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIo_unit([NotNull] FortranParser.Io_unitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.file_unit_number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFile_unit_number([NotNull] FortranParser.File_unit_numberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.file_unit_number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFile_unit_number([NotNull] FortranParser.File_unit_numberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.internal_file_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInternal_file_variable([NotNull] FortranParser.Internal_file_variableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.internal_file_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInternal_file_variable([NotNull] FortranParser.Internal_file_variableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.open_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpen_stmt([NotNull] FortranParser.Open_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.open_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpen_stmt([NotNull] FortranParser.Open_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.connect_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConnect_spec([NotNull] FortranParser.Connect_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.connect_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConnect_spec([NotNull] FortranParser.Connect_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.file_name_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFile_name_expr([NotNull] FortranParser.File_name_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.file_name_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFile_name_expr([NotNull] FortranParser.File_name_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.iomsg_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIomsg_variable([NotNull] FortranParser.Iomsg_variableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.iomsg_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIomsg_variable([NotNull] FortranParser.Iomsg_variableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.close_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClose_stmt([NotNull] FortranParser.Close_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.close_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClose_stmt([NotNull] FortranParser.Close_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.close_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClose_spec([NotNull] FortranParser.Close_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.close_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClose_spec([NotNull] FortranParser.Close_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.read_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRead_stmt([NotNull] FortranParser.Read_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.read_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRead_stmt([NotNull] FortranParser.Read_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.write_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWrite_stmt([NotNull] FortranParser.Write_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.write_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWrite_stmt([NotNull] FortranParser.Write_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.print_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrint_stmt([NotNull] FortranParser.Print_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.print_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrint_stmt([NotNull] FortranParser.Print_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.io_control_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIo_control_spec([NotNull] FortranParser.Io_control_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.io_control_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIo_control_spec([NotNull] FortranParser.Io_control_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.id_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterId_variable([NotNull] FortranParser.Id_variableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.id_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitId_variable([NotNull] FortranParser.Id_variableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.format"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFormat([NotNull] FortranParser.FormatContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.format"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFormat([NotNull] FortranParser.FormatContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.input_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInput_item([NotNull] FortranParser.Input_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.input_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInput_item([NotNull] FortranParser.Input_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.output_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOutput_item([NotNull] FortranParser.Output_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.output_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOutput_item([NotNull] FortranParser.Output_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.io_implied_do"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIo_implied_do([NotNull] FortranParser.Io_implied_doContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.io_implied_do"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIo_implied_do([NotNull] FortranParser.Io_implied_doContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.io_implied_do_object"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIo_implied_do_object([NotNull] FortranParser.Io_implied_do_objectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.io_implied_do_object"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIo_implied_do_object([NotNull] FortranParser.Io_implied_do_objectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.io_implied_do_control"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIo_implied_do_control([NotNull] FortranParser.Io_implied_do_controlContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.io_implied_do_control"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIo_implied_do_control([NotNull] FortranParser.Io_implied_do_controlContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.dtv_type_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDtv_type_spec([NotNull] FortranParser.Dtv_type_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.dtv_type_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDtv_type_spec([NotNull] FortranParser.Dtv_type_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.wait_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWait_stmt([NotNull] FortranParser.Wait_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.wait_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWait_stmt([NotNull] FortranParser.Wait_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.wait_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWait_spec([NotNull] FortranParser.Wait_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.wait_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWait_spec([NotNull] FortranParser.Wait_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.backspace_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBackspace_stmt([NotNull] FortranParser.Backspace_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.backspace_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBackspace_stmt([NotNull] FortranParser.Backspace_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.endfile_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEndfile_stmt([NotNull] FortranParser.Endfile_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.endfile_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEndfile_stmt([NotNull] FortranParser.Endfile_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.rewind_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRewind_stmt([NotNull] FortranParser.Rewind_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.rewind_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRewind_stmt([NotNull] FortranParser.Rewind_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.position_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPosition_spec([NotNull] FortranParser.Position_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.position_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPosition_spec([NotNull] FortranParser.Position_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.flush_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFlush_stmt([NotNull] FortranParser.Flush_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.flush_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFlush_stmt([NotNull] FortranParser.Flush_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.flush_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFlush_spec([NotNull] FortranParser.Flush_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.flush_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFlush_spec([NotNull] FortranParser.Flush_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.inquire_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInquire_stmt([NotNull] FortranParser.Inquire_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.inquire_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInquire_stmt([NotNull] FortranParser.Inquire_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.inquire_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInquire_spec([NotNull] FortranParser.Inquire_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.inquire_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInquire_spec([NotNull] FortranParser.Inquire_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.format_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFormat_stmt([NotNull] FortranParser.Format_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.format_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFormat_stmt([NotNull] FortranParser.Format_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.format_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFormat_specification([NotNull] FortranParser.Format_specificationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.format_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFormat_specification([NotNull] FortranParser.Format_specificationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.format_items"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFormat_items([NotNull] FortranParser.Format_itemsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.format_items"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFormat_items([NotNull] FortranParser.Format_itemsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.format_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFormat_item([NotNull] FortranParser.Format_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.format_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFormat_item([NotNull] FortranParser.Format_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.unlimited_format_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnlimited_format_item([NotNull] FortranParser.Unlimited_format_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.unlimited_format_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnlimited_format_item([NotNull] FortranParser.Unlimited_format_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.r"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterR([NotNull] FortranParser.RContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.r"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitR([NotNull] FortranParser.RContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.data_edit_desc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterData_edit_desc([NotNull] FortranParser.Data_edit_descContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.data_edit_desc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitData_edit_desc([NotNull] FortranParser.Data_edit_descContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.w"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterW([NotNull] FortranParser.WContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.w"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitW([NotNull] FortranParser.WContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.m"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterM([NotNull] FortranParser.MContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.m"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitM([NotNull] FortranParser.MContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.d"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterD([NotNull] FortranParser.DContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.d"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitD([NotNull] FortranParser.DContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.e"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterE([NotNull] FortranParser.EContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.e"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitE([NotNull] FortranParser.EContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.v"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterV([NotNull] FortranParser.VContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.v"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitV([NotNull] FortranParser.VContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.control_edit_desc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterControl_edit_desc([NotNull] FortranParser.Control_edit_descContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.control_edit_desc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitControl_edit_desc([NotNull] FortranParser.Control_edit_descContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.k"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterK([NotNull] FortranParser.KContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.k"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitK([NotNull] FortranParser.KContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.position_edit_desc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPosition_edit_desc([NotNull] FortranParser.Position_edit_descContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.position_edit_desc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPosition_edit_desc([NotNull] FortranParser.Position_edit_descContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.n"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterN([NotNull] FortranParser.NContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.n"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitN([NotNull] FortranParser.NContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.blank_interp_edit_desc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlank_interp_edit_desc([NotNull] FortranParser.Blank_interp_edit_descContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.blank_interp_edit_desc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlank_interp_edit_desc([NotNull] FortranParser.Blank_interp_edit_descContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.decimal_edit_desc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecimal_edit_desc([NotNull] FortranParser.Decimal_edit_descContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.decimal_edit_desc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecimal_edit_desc([NotNull] FortranParser.Decimal_edit_descContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.leading_zero_edit_desc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLeading_zero_edit_desc([NotNull] FortranParser.Leading_zero_edit_descContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.leading_zero_edit_desc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLeading_zero_edit_desc([NotNull] FortranParser.Leading_zero_edit_descContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.round_edit_desc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRound_edit_desc([NotNull] FortranParser.Round_edit_descContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.round_edit_desc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRound_edit_desc([NotNull] FortranParser.Round_edit_descContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.sign_edit_desc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSign_edit_desc([NotNull] FortranParser.Sign_edit_descContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.sign_edit_desc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSign_edit_desc([NotNull] FortranParser.Sign_edit_descContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.char_string_edit_desc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterChar_string_edit_desc([NotNull] FortranParser.Char_string_edit_descContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.char_string_edit_desc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitChar_string_edit_desc([NotNull] FortranParser.Char_string_edit_descContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.program_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram_stmt([NotNull] FortranParser.Program_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.program_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram_stmt([NotNull] FortranParser.Program_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.end_program_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnd_program_stmt([NotNull] FortranParser.End_program_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.end_program_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnd_program_stmt([NotNull] FortranParser.End_program_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.module_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModule_stmt([NotNull] FortranParser.Module_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.module_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModule_stmt([NotNull] FortranParser.Module_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.end_module_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnd_module_stmt([NotNull] FortranParser.End_module_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.end_module_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnd_module_stmt([NotNull] FortranParser.End_module_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.use_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUse_stmt([NotNull] FortranParser.Use_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.use_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUse_stmt([NotNull] FortranParser.Use_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.module_nature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModule_nature([NotNull] FortranParser.Module_natureContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.module_nature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModule_nature([NotNull] FortranParser.Module_natureContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.rename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRename([NotNull] FortranParser.RenameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.rename"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRename([NotNull] FortranParser.RenameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.only"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOnly([NotNull] FortranParser.OnlyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.only"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOnly([NotNull] FortranParser.OnlyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.only_use_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOnly_use_name([NotNull] FortranParser.Only_use_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.only_use_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOnly_use_name([NotNull] FortranParser.Only_use_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.local_defined_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLocal_defined_operator([NotNull] FortranParser.Local_defined_operatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.local_defined_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLocal_defined_operator([NotNull] FortranParser.Local_defined_operatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.use_defined_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUse_defined_operator([NotNull] FortranParser.Use_defined_operatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.use_defined_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUse_defined_operator([NotNull] FortranParser.Use_defined_operatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.submodule_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubmodule_stmt([NotNull] FortranParser.Submodule_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.submodule_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubmodule_stmt([NotNull] FortranParser.Submodule_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.parent_identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParent_identifier([NotNull] FortranParser.Parent_identifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.parent_identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParent_identifier([NotNull] FortranParser.Parent_identifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.end_submodule_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnd_submodule_stmt([NotNull] FortranParser.End_submodule_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.end_submodule_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnd_submodule_stmt([NotNull] FortranParser.End_submodule_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.block_data_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock_data_stmt([NotNull] FortranParser.Block_data_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.block_data_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock_data_stmt([NotNull] FortranParser.Block_data_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.end_block_data_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnd_block_data_stmt([NotNull] FortranParser.End_block_data_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.end_block_data_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnd_block_data_stmt([NotNull] FortranParser.End_block_data_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.interface_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterface_block([NotNull] FortranParser.Interface_blockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.interface_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterface_block([NotNull] FortranParser.Interface_blockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.interface_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterface_specification([NotNull] FortranParser.Interface_specificationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.interface_specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterface_specification([NotNull] FortranParser.Interface_specificationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.interface_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterface_stmt([NotNull] FortranParser.Interface_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.interface_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterface_stmt([NotNull] FortranParser.Interface_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.end_interface_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnd_interface_stmt([NotNull] FortranParser.End_interface_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.end_interface_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnd_interface_stmt([NotNull] FortranParser.End_interface_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.interface_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterface_body([NotNull] FortranParser.Interface_bodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.interface_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterface_body([NotNull] FortranParser.Interface_bodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.procedure_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProcedure_stmt([NotNull] FortranParser.Procedure_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.procedure_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProcedure_stmt([NotNull] FortranParser.Procedure_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.specific_procedure"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSpecific_procedure([NotNull] FortranParser.Specific_procedureContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.specific_procedure"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSpecific_procedure([NotNull] FortranParser.Specific_procedureContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.generic_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGeneric_spec([NotNull] FortranParser.Generic_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.generic_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGeneric_spec([NotNull] FortranParser.Generic_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.defined_io_generic_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefined_io_generic_spec([NotNull] FortranParser.Defined_io_generic_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.defined_io_generic_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefined_io_generic_spec([NotNull] FortranParser.Defined_io_generic_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.generic_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGeneric_stmt([NotNull] FortranParser.Generic_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.generic_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGeneric_stmt([NotNull] FortranParser.Generic_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.external_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExternal_stmt([NotNull] FortranParser.External_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.external_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExternal_stmt([NotNull] FortranParser.External_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.procedure_declaration_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProcedure_declaration_stmt([NotNull] FortranParser.Procedure_declaration_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.procedure_declaration_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProcedure_declaration_stmt([NotNull] FortranParser.Procedure_declaration_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.proc_interface"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProc_interface([NotNull] FortranParser.Proc_interfaceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.proc_interface"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProc_interface([NotNull] FortranParser.Proc_interfaceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.proc_attr_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProc_attr_spec([NotNull] FortranParser.Proc_attr_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.proc_attr_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProc_attr_spec([NotNull] FortranParser.Proc_attr_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.proc_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProc_decl([NotNull] FortranParser.Proc_declContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.proc_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProc_decl([NotNull] FortranParser.Proc_declContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.interface_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterface_name([NotNull] FortranParser.Interface_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.interface_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterface_name([NotNull] FortranParser.Interface_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.proc_pointer_init"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProc_pointer_init([NotNull] FortranParser.Proc_pointer_initContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.proc_pointer_init"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProc_pointer_init([NotNull] FortranParser.Proc_pointer_initContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.initial_proc_target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInitial_proc_target([NotNull] FortranParser.Initial_proc_targetContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.initial_proc_target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInitial_proc_target([NotNull] FortranParser.Initial_proc_targetContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.intrinsic_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntrinsic_stmt([NotNull] FortranParser.Intrinsic_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.intrinsic_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntrinsic_stmt([NotNull] FortranParser.Intrinsic_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.function_reference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_reference([NotNull] FortranParser.Function_referenceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.function_reference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_reference([NotNull] FortranParser.Function_referenceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.call_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCall_stmt([NotNull] FortranParser.Call_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.call_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCall_stmt([NotNull] FortranParser.Call_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.procedure_designator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProcedure_designator([NotNull] FortranParser.Procedure_designatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.procedure_designator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProcedure_designator([NotNull] FortranParser.Procedure_designatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.actual_arg_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterActual_arg_spec([NotNull] FortranParser.Actual_arg_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.actual_arg_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitActual_arg_spec([NotNull] FortranParser.Actual_arg_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.actual_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterActual_arg([NotNull] FortranParser.Actual_argContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.actual_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitActual_arg([NotNull] FortranParser.Actual_argContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.alt_return_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlt_return_spec([NotNull] FortranParser.Alt_return_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.alt_return_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlt_return_spec([NotNull] FortranParser.Alt_return_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.conditional_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditional_arg([NotNull] FortranParser.Conditional_argContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.conditional_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditional_arg([NotNull] FortranParser.Conditional_argContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.consequent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConsequent([NotNull] FortranParser.ConsequentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.consequent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConsequent([NotNull] FortranParser.ConsequentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.consequent_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConsequent_arg([NotNull] FortranParser.Consequent_argContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.consequent_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConsequent_arg([NotNull] FortranParser.Consequent_argContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.prefix"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrefix([NotNull] FortranParser.PrefixContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.prefix"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrefix([NotNull] FortranParser.PrefixContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.prefix_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrefix_spec([NotNull] FortranParser.Prefix_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.prefix_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrefix_spec([NotNull] FortranParser.Prefix_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.proc_language_binding_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProc_language_binding_spec([NotNull] FortranParser.Proc_language_binding_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.proc_language_binding_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProc_language_binding_spec([NotNull] FortranParser.Proc_language_binding_specContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.function_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_stmt([NotNull] FortranParser.Function_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.function_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_stmt([NotNull] FortranParser.Function_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.dummy_arg_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDummy_arg_name([NotNull] FortranParser.Dummy_arg_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.dummy_arg_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDummy_arg_name([NotNull] FortranParser.Dummy_arg_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.suffix"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSuffix([NotNull] FortranParser.SuffixContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.suffix"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSuffix([NotNull] FortranParser.SuffixContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.end_function_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnd_function_stmt([NotNull] FortranParser.End_function_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.end_function_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnd_function_stmt([NotNull] FortranParser.End_function_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.subroutine_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubroutine_stmt([NotNull] FortranParser.Subroutine_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.subroutine_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubroutine_stmt([NotNull] FortranParser.Subroutine_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.dummy_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDummy_arg([NotNull] FortranParser.Dummy_argContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.dummy_arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDummy_arg([NotNull] FortranParser.Dummy_argContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.end_subroutine_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnd_subroutine_stmt([NotNull] FortranParser.End_subroutine_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.end_subroutine_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnd_subroutine_stmt([NotNull] FortranParser.End_subroutine_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.mp_subprogram_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMp_subprogram_stmt([NotNull] FortranParser.Mp_subprogram_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.mp_subprogram_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMp_subprogram_stmt([NotNull] FortranParser.Mp_subprogram_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.end_mp_subprogram_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnd_mp_subprogram_stmt([NotNull] FortranParser.End_mp_subprogram_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.end_mp_subprogram_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnd_mp_subprogram_stmt([NotNull] FortranParser.End_mp_subprogram_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.entry_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEntry_stmt([NotNull] FortranParser.Entry_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.entry_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEntry_stmt([NotNull] FortranParser.Entry_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.return_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturn_stmt([NotNull] FortranParser.Return_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.return_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturn_stmt([NotNull] FortranParser.Return_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.contains_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterContains_stmt([NotNull] FortranParser.Contains_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.contains_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitContains_stmt([NotNull] FortranParser.Contains_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.stmt_function_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt_function_stmt([NotNull] FortranParser.Stmt_function_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.stmt_function_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt_function_stmt([NotNull] FortranParser.Stmt_function_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.ac_value_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAc_value_list([NotNull] FortranParser.Ac_value_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.ac_value_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAc_value_list([NotNull] FortranParser.Ac_value_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.access_id_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAccess_id_list([NotNull] FortranParser.Access_id_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.access_id_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAccess_id_list([NotNull] FortranParser.Access_id_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.actual_arg_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterActual_arg_spec_list([NotNull] FortranParser.Actual_arg_spec_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.actual_arg_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitActual_arg_spec_list([NotNull] FortranParser.Actual_arg_spec_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.alloc_opt_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlloc_opt_list([NotNull] FortranParser.Alloc_opt_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.alloc_opt_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlloc_opt_list([NotNull] FortranParser.Alloc_opt_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.allocatable_decl_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAllocatable_decl_list([NotNull] FortranParser.Allocatable_decl_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.allocatable_decl_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAllocatable_decl_list([NotNull] FortranParser.Allocatable_decl_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.allocate_coshape_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAllocate_coshape_spec_list([NotNull] FortranParser.Allocate_coshape_spec_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.allocate_coshape_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAllocate_coshape_spec_list([NotNull] FortranParser.Allocate_coshape_spec_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.allocate_object_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAllocate_object_list([NotNull] FortranParser.Allocate_object_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.allocate_object_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAllocate_object_list([NotNull] FortranParser.Allocate_object_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.allocate_shape_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAllocate_shape_spec_list([NotNull] FortranParser.Allocate_shape_spec_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.allocate_shape_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAllocate_shape_spec_list([NotNull] FortranParser.Allocate_shape_spec_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.allocation_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAllocation_list([NotNull] FortranParser.Allocation_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.allocation_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAllocation_list([NotNull] FortranParser.Allocation_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.association_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssociation_list([NotNull] FortranParser.Association_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.association_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssociation_list([NotNull] FortranParser.Association_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.assumed_implied_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssumed_implied_spec_list([NotNull] FortranParser.Assumed_implied_spec_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.assumed_implied_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssumed_implied_spec_list([NotNull] FortranParser.Assumed_implied_spec_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.assumed_shape_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssumed_shape_spec_list([NotNull] FortranParser.Assumed_shape_spec_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.assumed_shape_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssumed_shape_spec_list([NotNull] FortranParser.Assumed_shape_spec_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.bind_entity_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBind_entity_list([NotNull] FortranParser.Bind_entity_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.bind_entity_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBind_entity_list([NotNull] FortranParser.Bind_entity_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.binding_attr_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBinding_attr_list([NotNull] FortranParser.Binding_attr_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.binding_attr_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBinding_attr_list([NotNull] FortranParser.Binding_attr_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.binding_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBinding_name_list([NotNull] FortranParser.Binding_name_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.binding_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBinding_name_list([NotNull] FortranParser.Binding_name_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.bounds_remapping_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBounds_remapping_list([NotNull] FortranParser.Bounds_remapping_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.bounds_remapping_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBounds_remapping_list([NotNull] FortranParser.Bounds_remapping_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.bounds_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBounds_spec_list([NotNull] FortranParser.Bounds_spec_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.bounds_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBounds_spec_list([NotNull] FortranParser.Bounds_spec_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.case_value_range_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCase_value_range_list([NotNull] FortranParser.Case_value_range_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.case_value_range_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCase_value_range_list([NotNull] FortranParser.Case_value_range_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.close_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClose_spec_list([NotNull] FortranParser.Close_spec_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.close_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClose_spec_list([NotNull] FortranParser.Close_spec_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.coarray_association_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCoarray_association_list([NotNull] FortranParser.Coarray_association_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.coarray_association_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCoarray_association_list([NotNull] FortranParser.Coarray_association_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.codimension_decl_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCodimension_decl_list([NotNull] FortranParser.Codimension_decl_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.codimension_decl_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCodimension_decl_list([NotNull] FortranParser.Codimension_decl_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.common_block_object_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCommon_block_object_list([NotNull] FortranParser.Common_block_object_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.common_block_object_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCommon_block_object_list([NotNull] FortranParser.Common_block_object_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.component_attr_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComponent_attr_spec_list([NotNull] FortranParser.Component_attr_spec_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.component_attr_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComponent_attr_spec_list([NotNull] FortranParser.Component_attr_spec_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.component_decl_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComponent_decl_list([NotNull] FortranParser.Component_decl_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.component_decl_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComponent_decl_list([NotNull] FortranParser.Component_decl_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.component_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComponent_spec_list([NotNull] FortranParser.Component_spec_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.component_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComponent_spec_list([NotNull] FortranParser.Component_spec_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.concurrent_control_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConcurrent_control_list([NotNull] FortranParser.Concurrent_control_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.concurrent_control_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConcurrent_control_list([NotNull] FortranParser.Concurrent_control_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.connect_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConnect_spec_list([NotNull] FortranParser.Connect_spec_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.connect_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConnect_spec_list([NotNull] FortranParser.Connect_spec_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.cosubscript_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCosubscript_list([NotNull] FortranParser.Cosubscript_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.cosubscript_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCosubscript_list([NotNull] FortranParser.Cosubscript_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.data_i_do_object_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterData_i_do_object_list([NotNull] FortranParser.Data_i_do_object_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.data_i_do_object_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitData_i_do_object_list([NotNull] FortranParser.Data_i_do_object_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.data_stmt_object_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterData_stmt_object_list([NotNull] FortranParser.Data_stmt_object_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.data_stmt_object_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitData_stmt_object_list([NotNull] FortranParser.Data_stmt_object_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.data_stmt_value_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterData_stmt_value_list([NotNull] FortranParser.Data_stmt_value_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.data_stmt_value_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitData_stmt_value_list([NotNull] FortranParser.Data_stmt_value_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.dealloc_opt_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDealloc_opt_list([NotNull] FortranParser.Dealloc_opt_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.dealloc_opt_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDealloc_opt_list([NotNull] FortranParser.Dealloc_opt_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.deferred_coshape_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeferred_coshape_spec_list([NotNull] FortranParser.Deferred_coshape_spec_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.deferred_coshape_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeferred_coshape_spec_list([NotNull] FortranParser.Deferred_coshape_spec_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.deferred_shape_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeferred_shape_spec_list([NotNull] FortranParser.Deferred_shape_spec_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.deferred_shape_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeferred_shape_spec_list([NotNull] FortranParser.Deferred_shape_spec_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.dummy_arg_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDummy_arg_list([NotNull] FortranParser.Dummy_arg_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.dummy_arg_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDummy_arg_list([NotNull] FortranParser.Dummy_arg_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.dummy_arg_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDummy_arg_name_list([NotNull] FortranParser.Dummy_arg_name_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.dummy_arg_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDummy_arg_name_list([NotNull] FortranParser.Dummy_arg_name_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.entity_decl_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEntity_decl_list([NotNull] FortranParser.Entity_decl_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.entity_decl_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEntity_decl_list([NotNull] FortranParser.Entity_decl_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.entity_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEntity_name_list([NotNull] FortranParser.Entity_name_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.entity_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEntity_name_list([NotNull] FortranParser.Entity_name_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.enumerator_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumerator_list([NotNull] FortranParser.Enumerator_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.enumerator_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumerator_list([NotNull] FortranParser.Enumerator_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.enumerator_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumerator_name_list([NotNull] FortranParser.Enumerator_name_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.enumerator_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumerator_name_list([NotNull] FortranParser.Enumerator_name_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.equivalence_object_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEquivalence_object_list([NotNull] FortranParser.Equivalence_object_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.equivalence_object_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEquivalence_object_list([NotNull] FortranParser.Equivalence_object_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.equivalence_set_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEquivalence_set_list([NotNull] FortranParser.Equivalence_set_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.equivalence_set_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEquivalence_set_list([NotNull] FortranParser.Equivalence_set_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.event_wait_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEvent_wait_spec_list([NotNull] FortranParser.Event_wait_spec_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.event_wait_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEvent_wait_spec_list([NotNull] FortranParser.Event_wait_spec_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.explicit_shape_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplicit_shape_spec_list([NotNull] FortranParser.Explicit_shape_spec_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.explicit_shape_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplicit_shape_spec_list([NotNull] FortranParser.Explicit_shape_spec_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.external_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExternal_name_list([NotNull] FortranParser.External_name_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.external_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExternal_name_list([NotNull] FortranParser.External_name_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.final_subroutine_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFinal_subroutine_name_list([NotNull] FortranParser.Final_subroutine_name_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.final_subroutine_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFinal_subroutine_name_list([NotNull] FortranParser.Final_subroutine_name_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.flush_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFlush_spec_list([NotNull] FortranParser.Flush_spec_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.flush_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFlush_spec_list([NotNull] FortranParser.Flush_spec_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.form_team_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForm_team_spec_list([NotNull] FortranParser.Form_team_spec_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.form_team_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForm_team_spec_list([NotNull] FortranParser.Form_team_spec_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.image_selector_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImage_selector_spec_list([NotNull] FortranParser.Image_selector_spec_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.image_selector_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImage_selector_spec_list([NotNull] FortranParser.Image_selector_spec_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.implicit_none_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImplicit_none_spec_list([NotNull] FortranParser.Implicit_none_spec_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.implicit_none_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImplicit_none_spec_list([NotNull] FortranParser.Implicit_none_spec_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.implicit_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImplicit_spec_list([NotNull] FortranParser.Implicit_spec_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.implicit_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImplicit_spec_list([NotNull] FortranParser.Implicit_spec_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.import_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImport_name_list([NotNull] FortranParser.Import_name_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.import_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImport_name_list([NotNull] FortranParser.Import_name_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.input_item_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInput_item_list([NotNull] FortranParser.Input_item_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.input_item_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInput_item_list([NotNull] FortranParser.Input_item_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.inquire_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInquire_spec_list([NotNull] FortranParser.Inquire_spec_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.inquire_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInquire_spec_list([NotNull] FortranParser.Inquire_spec_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.intrinsic_procedure_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntrinsic_procedure_name_list([NotNull] FortranParser.Intrinsic_procedure_name_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.intrinsic_procedure_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntrinsic_procedure_name_list([NotNull] FortranParser.Intrinsic_procedure_name_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.io_control_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIo_control_spec_list([NotNull] FortranParser.Io_control_spec_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.io_control_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIo_control_spec_list([NotNull] FortranParser.Io_control_spec_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.io_implied_do_object_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIo_implied_do_object_list([NotNull] FortranParser.Io_implied_do_object_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.io_implied_do_object_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIo_implied_do_object_list([NotNull] FortranParser.Io_implied_do_object_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.label_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLabel_list([NotNull] FortranParser.Label_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.label_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLabel_list([NotNull] FortranParser.Label_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.letter_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLetter_spec_list([NotNull] FortranParser.Letter_spec_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.letter_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLetter_spec_list([NotNull] FortranParser.Letter_spec_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.lock_stat_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLock_stat_list([NotNull] FortranParser.Lock_stat_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.lock_stat_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLock_stat_list([NotNull] FortranParser.Lock_stat_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.named_constant_def_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamed_constant_def_list([NotNull] FortranParser.Named_constant_def_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.named_constant_def_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamed_constant_def_list([NotNull] FortranParser.Named_constant_def_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.namelist_group_object_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamelist_group_object_list([NotNull] FortranParser.Namelist_group_object_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.namelist_group_object_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamelist_group_object_list([NotNull] FortranParser.Namelist_group_object_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.object_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObject_name_list([NotNull] FortranParser.Object_name_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.object_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObject_name_list([NotNull] FortranParser.Object_name_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.only_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOnly_list([NotNull] FortranParser.Only_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.only_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOnly_list([NotNull] FortranParser.Only_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.output_item_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOutput_item_list([NotNull] FortranParser.Output_item_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.output_item_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOutput_item_list([NotNull] FortranParser.Output_item_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.pointer_decl_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPointer_decl_list([NotNull] FortranParser.Pointer_decl_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.pointer_decl_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPointer_decl_list([NotNull] FortranParser.Pointer_decl_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.pointer_object_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPointer_object_list([NotNull] FortranParser.Pointer_object_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.pointer_object_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPointer_object_list([NotNull] FortranParser.Pointer_object_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.position_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPosition_spec_list([NotNull] FortranParser.Position_spec_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.position_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPosition_spec_list([NotNull] FortranParser.Position_spec_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.proc_component_attr_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProc_component_attr_spec_list([NotNull] FortranParser.Proc_component_attr_spec_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.proc_component_attr_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProc_component_attr_spec_list([NotNull] FortranParser.Proc_component_attr_spec_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.proc_decl_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProc_decl_list([NotNull] FortranParser.Proc_decl_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.proc_decl_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProc_decl_list([NotNull] FortranParser.Proc_decl_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.rename_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRename_list([NotNull] FortranParser.Rename_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.rename_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRename_list([NotNull] FortranParser.Rename_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.saved_entity_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSaved_entity_list([NotNull] FortranParser.Saved_entity_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.saved_entity_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSaved_entity_list([NotNull] FortranParser.Saved_entity_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.section_subscript_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSection_subscript_list([NotNull] FortranParser.Section_subscript_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.section_subscript_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSection_subscript_list([NotNull] FortranParser.Section_subscript_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.specific_procedure_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSpecific_procedure_list([NotNull] FortranParser.Specific_procedure_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.specific_procedure_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSpecific_procedure_list([NotNull] FortranParser.Specific_procedure_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.sync_stat_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSync_stat_list([NotNull] FortranParser.Sync_stat_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.sync_stat_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSync_stat_list([NotNull] FortranParser.Sync_stat_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.target_decl_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTarget_decl_list([NotNull] FortranParser.Target_decl_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.target_decl_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTarget_decl_list([NotNull] FortranParser.Target_decl_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.type_attr_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_attr_spec_list([NotNull] FortranParser.Type_attr_spec_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.type_attr_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_attr_spec_list([NotNull] FortranParser.Type_attr_spec_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.type_bound_proc_decl_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_bound_proc_decl_list([NotNull] FortranParser.Type_bound_proc_decl_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.type_bound_proc_decl_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_bound_proc_decl_list([NotNull] FortranParser.Type_bound_proc_decl_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.type_param_decl_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_param_decl_list([NotNull] FortranParser.Type_param_decl_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.type_param_decl_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_param_decl_list([NotNull] FortranParser.Type_param_decl_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.type_param_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_param_name_list([NotNull] FortranParser.Type_param_name_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.type_param_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_param_name_list([NotNull] FortranParser.Type_param_name_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.type_param_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_param_spec_list([NotNull] FortranParser.Type_param_spec_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.type_param_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_param_spec_list([NotNull] FortranParser.Type_param_spec_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.v_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterV_list([NotNull] FortranParser.V_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.v_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitV_list([NotNull] FortranParser.V_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.variable_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable_name_list([NotNull] FortranParser.Variable_name_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.variable_name_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable_name_list([NotNull] FortranParser.Variable_name_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.wait_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWait_spec_list([NotNull] FortranParser.Wait_spec_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.wait_spec_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWait_spec_list([NotNull] FortranParser.Wait_spec_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.access_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAccess_name([NotNull] FortranParser.Access_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.access_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAccess_name([NotNull] FortranParser.Access_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.ancestor_module_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAncestor_module_name([NotNull] FortranParser.Ancestor_module_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.ancestor_module_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAncestor_module_name([NotNull] FortranParser.Ancestor_module_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.arg_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArg_name([NotNull] FortranParser.Arg_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.arg_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArg_name([NotNull] FortranParser.Arg_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.array_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArray_name([NotNull] FortranParser.Array_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.array_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArray_name([NotNull] FortranParser.Array_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.associate_construct_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssociate_construct_name([NotNull] FortranParser.Associate_construct_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.associate_construct_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssociate_construct_name([NotNull] FortranParser.Associate_construct_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.associate_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssociate_name([NotNull] FortranParser.Associate_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.associate_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssociate_name([NotNull] FortranParser.Associate_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.binding_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBinding_name([NotNull] FortranParser.Binding_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.binding_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBinding_name([NotNull] FortranParser.Binding_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.block_construct_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock_construct_name([NotNull] FortranParser.Block_construct_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.block_construct_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock_construct_name([NotNull] FortranParser.Block_construct_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.block_data_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock_data_name([NotNull] FortranParser.Block_data_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.block_data_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock_data_name([NotNull] FortranParser.Block_data_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.case_construct_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCase_construct_name([NotNull] FortranParser.Case_construct_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.case_construct_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCase_construct_name([NotNull] FortranParser.Case_construct_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.coarray_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCoarray_name([NotNull] FortranParser.Coarray_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.coarray_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCoarray_name([NotNull] FortranParser.Coarray_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.common_block_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCommon_block_name([NotNull] FortranParser.Common_block_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.common_block_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCommon_block_name([NotNull] FortranParser.Common_block_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.component_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComponent_name([NotNull] FortranParser.Component_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.component_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComponent_name([NotNull] FortranParser.Component_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.construct_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstruct_name([NotNull] FortranParser.Construct_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.construct_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstruct_name([NotNull] FortranParser.Construct_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.critical_construct_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCritical_construct_name([NotNull] FortranParser.Critical_construct_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.critical_construct_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCritical_construct_name([NotNull] FortranParser.Critical_construct_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.data_pointer_component_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterData_pointer_component_name([NotNull] FortranParser.Data_pointer_component_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.data_pointer_component_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitData_pointer_component_name([NotNull] FortranParser.Data_pointer_component_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.do_construct_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDo_construct_name([NotNull] FortranParser.Do_construct_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.do_construct_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDo_construct_name([NotNull] FortranParser.Do_construct_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.entity_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEntity_name([NotNull] FortranParser.Entity_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.entity_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEntity_name([NotNull] FortranParser.Entity_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.entry_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEntry_name([NotNull] FortranParser.Entry_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.entry_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEntry_name([NotNull] FortranParser.Entry_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.enum_type_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnum_type_name([NotNull] FortranParser.Enum_type_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.enum_type_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnum_type_name([NotNull] FortranParser.Enum_type_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.enumeration_type_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumeration_type_name([NotNull] FortranParser.Enumeration_type_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.enumeration_type_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumeration_type_name([NotNull] FortranParser.Enumeration_type_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.enumerator_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumerator_name([NotNull] FortranParser.Enumerator_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.enumerator_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumerator_name([NotNull] FortranParser.Enumerator_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.external_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExternal_name([NotNull] FortranParser.External_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.external_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExternal_name([NotNull] FortranParser.External_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.final_subroutine_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFinal_subroutine_name([NotNull] FortranParser.Final_subroutine_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.final_subroutine_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFinal_subroutine_name([NotNull] FortranParser.Final_subroutine_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.forall_construct_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForall_construct_name([NotNull] FortranParser.Forall_construct_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.forall_construct_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForall_construct_name([NotNull] FortranParser.Forall_construct_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.function_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_name([NotNull] FortranParser.Function_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.function_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_name([NotNull] FortranParser.Function_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.function_reduction_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_reduction_name([NotNull] FortranParser.Function_reduction_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.function_reduction_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_reduction_name([NotNull] FortranParser.Function_reduction_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.generic_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGeneric_name([NotNull] FortranParser.Generic_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.generic_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGeneric_name([NotNull] FortranParser.Generic_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.if_construct_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf_construct_name([NotNull] FortranParser.If_construct_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.if_construct_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf_construct_name([NotNull] FortranParser.If_construct_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.import_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImport_name([NotNull] FortranParser.Import_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.import_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImport_name([NotNull] FortranParser.Import_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.index_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndex_name([NotNull] FortranParser.Index_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.index_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndex_name([NotNull] FortranParser.Index_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.int_constant_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInt_constant_name([NotNull] FortranParser.Int_constant_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.int_constant_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInt_constant_name([NotNull] FortranParser.Int_constant_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.int_variable_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInt_variable_name([NotNull] FortranParser.Int_variable_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.int_variable_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInt_variable_name([NotNull] FortranParser.Int_variable_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.intrinsic_procedure_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntrinsic_procedure_name([NotNull] FortranParser.Intrinsic_procedure_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.intrinsic_procedure_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntrinsic_procedure_name([NotNull] FortranParser.Intrinsic_procedure_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.local_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLocal_name([NotNull] FortranParser.Local_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.local_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLocal_name([NotNull] FortranParser.Local_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.module_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModule_name([NotNull] FortranParser.Module_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.module_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModule_name([NotNull] FortranParser.Module_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.namelist_group_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamelist_group_name([NotNull] FortranParser.Namelist_group_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.namelist_group_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamelist_group_name([NotNull] FortranParser.Namelist_group_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.parent_submodule_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParent_submodule_name([NotNull] FortranParser.Parent_submodule_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.parent_submodule_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParent_submodule_name([NotNull] FortranParser.Parent_submodule_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.parent_type_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParent_type_name([NotNull] FortranParser.Parent_type_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.parent_type_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParent_type_name([NotNull] FortranParser.Parent_type_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.part_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPart_name([NotNull] FortranParser.Part_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.part_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPart_name([NotNull] FortranParser.Part_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.procedure_component_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProcedure_component_name([NotNull] FortranParser.Procedure_component_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.procedure_component_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProcedure_component_name([NotNull] FortranParser.Procedure_component_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.procedure_entity_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProcedure_entity_name([NotNull] FortranParser.Procedure_entity_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.procedure_entity_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProcedure_entity_name([NotNull] FortranParser.Procedure_entity_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.procedure_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProcedure_name([NotNull] FortranParser.Procedure_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.procedure_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProcedure_name([NotNull] FortranParser.Procedure_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.procptr_entity_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProcptr_entity_name([NotNull] FortranParser.Procptr_entity_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.procptr_entity_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProcptr_entity_name([NotNull] FortranParser.Procptr_entity_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.program_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram_name([NotNull] FortranParser.Program_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.program_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram_name([NotNull] FortranParser.Program_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.result_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterResult_name([NotNull] FortranParser.Result_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.result_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitResult_name([NotNull] FortranParser.Result_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.scalar_constant_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScalar_constant_expr([NotNull] FortranParser.Scalar_constant_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.scalar_constant_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScalar_constant_expr([NotNull] FortranParser.Scalar_constant_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.scalar_constant_subobject"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScalar_constant_subobject([NotNull] FortranParser.Scalar_constant_subobjectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.scalar_constant_subobject"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScalar_constant_subobject([NotNull] FortranParser.Scalar_constant_subobjectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.scalar_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScalar_constant([NotNull] FortranParser.Scalar_constantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.scalar_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScalar_constant([NotNull] FortranParser.Scalar_constantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.scalar_default_char_constant_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScalar_default_char_constant_expr([NotNull] FortranParser.Scalar_default_char_constant_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.scalar_default_char_constant_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScalar_default_char_constant_expr([NotNull] FortranParser.Scalar_default_char_constant_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.scalar_default_char_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScalar_default_char_expr([NotNull] FortranParser.Scalar_default_char_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.scalar_default_char_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScalar_default_char_expr([NotNull] FortranParser.Scalar_default_char_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.scalar_default_char_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScalar_default_char_variable([NotNull] FortranParser.Scalar_default_char_variableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.scalar_default_char_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScalar_default_char_variable([NotNull] FortranParser.Scalar_default_char_variableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.scalar_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScalar_expr([NotNull] FortranParser.Scalar_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.scalar_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScalar_expr([NotNull] FortranParser.Scalar_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.scalar_int_constant_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScalar_int_constant_expr([NotNull] FortranParser.Scalar_int_constant_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.scalar_int_constant_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScalar_int_constant_expr([NotNull] FortranParser.Scalar_int_constant_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.scalar_int_constant_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScalar_int_constant_name([NotNull] FortranParser.Scalar_int_constant_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.scalar_int_constant_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScalar_int_constant_name([NotNull] FortranParser.Scalar_int_constant_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.scalar_int_constant_subobject"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScalar_int_constant_subobject([NotNull] FortranParser.Scalar_int_constant_subobjectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.scalar_int_constant_subobject"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScalar_int_constant_subobject([NotNull] FortranParser.Scalar_int_constant_subobjectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.scalar_int_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScalar_int_constant([NotNull] FortranParser.Scalar_int_constantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.scalar_int_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScalar_int_constant([NotNull] FortranParser.Scalar_int_constantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.scalar_int_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScalar_int_expr([NotNull] FortranParser.Scalar_int_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.scalar_int_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScalar_int_expr([NotNull] FortranParser.Scalar_int_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.scalar_int_variable_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScalar_int_variable_name([NotNull] FortranParser.Scalar_int_variable_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.scalar_int_variable_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScalar_int_variable_name([NotNull] FortranParser.Scalar_int_variable_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.scalar_int_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScalar_int_variable([NotNull] FortranParser.Scalar_int_variableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.scalar_int_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScalar_int_variable([NotNull] FortranParser.Scalar_int_variableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.scalar_logical_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScalar_logical_expr([NotNull] FortranParser.Scalar_logical_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.scalar_logical_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScalar_logical_expr([NotNull] FortranParser.Scalar_logical_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.scalar_logical_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScalar_logical_variable([NotNull] FortranParser.Scalar_logical_variableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.scalar_logical_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScalar_logical_variable([NotNull] FortranParser.Scalar_logical_variableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.scalar_mask_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScalar_mask_expr([NotNull] FortranParser.Scalar_mask_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.scalar_mask_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScalar_mask_expr([NotNull] FortranParser.Scalar_mask_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.scalar_structure_component"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScalar_structure_component([NotNull] FortranParser.Scalar_structure_componentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.scalar_structure_component"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScalar_structure_component([NotNull] FortranParser.Scalar_structure_componentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.scalar_variable_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScalar_variable_name([NotNull] FortranParser.Scalar_variable_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.scalar_variable_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScalar_variable_name([NotNull] FortranParser.Scalar_variable_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.scalar_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScalar_variable([NotNull] FortranParser.Scalar_variableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.scalar_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScalar_variable([NotNull] FortranParser.Scalar_variableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.select_construct_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelect_construct_name([NotNull] FortranParser.Select_construct_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.select_construct_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelect_construct_name([NotNull] FortranParser.Select_construct_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.submodule_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubmodule_name([NotNull] FortranParser.Submodule_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.submodule_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubmodule_name([NotNull] FortranParser.Submodule_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.subroutine_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubroutine_name([NotNull] FortranParser.Subroutine_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.subroutine_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubroutine_name([NotNull] FortranParser.Subroutine_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.team_construct_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTeam_construct_name([NotNull] FortranParser.Team_construct_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.team_construct_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTeam_construct_name([NotNull] FortranParser.Team_construct_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.type_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_name([NotNull] FortranParser.Type_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.type_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_name([NotNull] FortranParser.Type_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.type_param_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_param_name([NotNull] FortranParser.Type_param_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.type_param_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_param_name([NotNull] FortranParser.Type_param_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.use_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUse_name([NotNull] FortranParser.Use_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.use_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUse_name([NotNull] FortranParser.Use_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FortranParser.where_construct_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhere_construct_name([NotNull] FortranParser.Where_construct_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FortranParser.where_construct_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhere_construct_name([NotNull] FortranParser.Where_construct_nameContext context);
}
